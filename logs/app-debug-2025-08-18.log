2025-08-18 01:28:15 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId 192.168.0.39:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 01:28:17 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 01:28:17 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.39:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 01:28:17 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - 192.168.0.39:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 01:28:19 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId 192.168.0.39:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 01:28:19 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 01:28:19 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.39:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 01:28:19 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - 192.168.0.39:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 01:28:21 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 01:28:21 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 01:28:21 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 01:28:21 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 01:28:28 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 01:28:28 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 01:28:28 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 01:28:28 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 01:28:28 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 01:28:28 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 01:28:28 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 01:28:29 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 01:28:29 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 01:28:29 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 01:28:29 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:22:28 [main] INFO  c.s.d.DiscoveryServiceApplication - Starting DiscoveryServiceApplication using Java 17.0.15 with PID 16456 (C:\discovery-server\discover-service\target\classes started by Surya in C:\discovery-server\discover-service) [sessionId=, requestId=]
2025-08-18 22:22:28 [main] DEBUG c.s.d.DiscoveryServiceApplication - Running with Spring Boot v3.3.0, Spring v6.1.8 [sessionId=, requestId=]
2025-08-18 22:22:28 [main] INFO  c.s.d.DiscoveryServiceApplication - No active profile set, falling back to 1 default profile: "default" [sessionId=, requestId=]
2025-08-18 22:22:28 [main] DEBUG o.s.boot.SpringApplication - Loading source class com.saviynt.discovery.DiscoveryServiceApplication [sessionId=, requestId=]
2025-08-18 22:22:28 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28 [sessionId=, requestId=]
2025-08-18 22:22:28 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' [sessionId=, requestId=]
2025-08-18 22:22:28 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScope' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.cloud.context.scope.GenericScope - Generating bean factory id from names: [applicationAvailability, applicationTaskExecutor, basicErrorController, beanNameHandlerMapping, beanNameViewResolver, beansEndpoint, blockingLoadBalancerClient, cachesEndpoint, cachesEndpointWebExtension, caffeineWarnLogger, characterEncodingFilter, classLoaderMetrics, compositeCompatibilityVerifier, compositeDiscoveryClient, conditionsReportEndpoint, configDataContextRefresher, configurationPropertiesBeans, configurationPropertiesRebinder, configurationPropertiesReportEndpoint, configurationPropertiesReportEndpointWebExtension, controllerEndpointDiscoverer, controllerEndpointHandlerMapping, controllerExposeExcludePropertyEndpointFilter, conventionErrorViewResolver, default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification, defaultEurekaClientHttpRequestFactorySupplier, defaultLoadBalancerCacheManager, defaultMeterObservationHandler, defaultServletHandlerMapping, defaultViewResolver, defaultsBindHandlerAdvisor, deferringLoadBalancerInterceptor, discoveryClient, discoveryClientHealthIndicator, discoveryCompositeHealthContributor, discoveryServiceApplication, diskSpaceHealthIndicator, diskSpaceMetrics, dispatcherServlet, dispatcherServletMappingDescriptionProvider, dispatcherServletRegistration, dumpEndpoint, eagerTaskExecutorMetrics, endpointCachingOperationInvokerAdvisor, endpointMediaTypes, endpointObjectMapper, endpointObjectMapperWebMvcConfigurer, endpointOperationParameterMapper, environmentEndpoint, environmentEndpointWebExtension, environmentManager, error, errorAttributes, errorPageCustomizer, errorPageRegistrarBeanPostProcessor, eureka-org.springframework.cloud.netflix.eureka.server.EurekaProperties, eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties, eureka.dashboard-org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties, eureka.instance.registry-org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties, eurekaApplicationInfoManager, eurekaAutoServiceRegistration, eurekaClient, eurekaClientConfigBean, eurekaController, eurekaFeature, eurekaHealthIndicator, eurekaInstanceConfigBean, eurekaLoadBalancerProperties, eurekaRegistration, eurekaServerBootstrap, eurekaServerConfig, eurekaServerContext, eurekaServerFeature, eurekaServerMarkerBean, eurekaServiceRegistry, eurekaVersionFilterRegistration, featuresEndpoint, fileDescriptorMetrics, fileWatcher, filterMappingDescriptionProvider, flashMapManager, forceAutoProxyCreatorToUseClassProxying, formContentFilter, freeMarkerConfiguration, freeMarkerConfigurer, freeMarkerViewResolver, gson, gsonBuilder, handlerExceptionResolver, handlerFunctionAdapter, healthContributorRegistry, healthEndpoint, healthEndpointGroupMembershipValidator, healthEndpointGroups, healthEndpointGroupsBeanPostProcessor, healthEndpointWebExtension, healthEndpointWebMvcHandlerMapping, healthHttpCodeStatusMapper, healthStatusAggregator, heapDumpWebEndpoint, httpMessageConvertersRestClientCustomizer, httpRequestHandlerAdapter, inetUtils, inetUtilsProperties, infoEndpoint, jacksonObjectMapper, jacksonObjectMapperBuilder, jersey3DiscoveryClientOptionalArgs, jersey3EurekaServerHttpClientFactory, jersey3TransportClientFactories, jerseyApplication, jerseyFilterRegistration, jsonComponentModule, jsonMixinModule, jsonMixinModuleEntries, jvmCompilationMetrics, jvmGcMetrics, jvmHeapPressureMetrics, jvmInfoMetrics, jvmMemoryMetrics, jvmThreadMetrics, lbRestClientPostProcessor, lifecycleProcessor, loadBalancedRestTemplateInitializerDeprecated, loadBalancerChildContextInitializer, loadBalancerClientFactory, loadBalancerClientsDefaultsMappingsProvider, loadBalancerEagerContextInitializer, loadBalancerInterceptor, loadBalancerRequestFactory, loadBalancerServiceInstanceCookieTransformer, localeCharsetMappingsCustomizer, localeResolver, logbackMetrics, loggersEndpoint, loggingRebinder, management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties, management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties, management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties, management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties, management.endpoint.sbom-org.springframework.boot.actuate.sbom.SbomProperties, management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties, management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties, management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties, management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties, management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties, management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties, management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties, management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties, managementServletContext, mappingJackson2HttpMessageConverter, mappingJackson2XmlHttpMessageConverter, mappingsEndpoint, messageConverters, meterRegistryCloser, meterRegistryPostProcessor, metricsEndpoint, metricsHttpClientUriTagFilter, metricsHttpServerUriTagFilter, metricsObservationHandlerGrouping, micrometerClock, multipartConfigElement, multipartResolver, mvcContentNegotiationManager, mvcConversionService, mvcHandlerMappingIntrospector, mvcPathMatcher, mvcPatternParser, mvcResourceUrlProvider, mvcUriComponentsContributor, mvcUrlPathHelper, mvcValidator, mvcViewResolver, observabilitySchedulingConfigurer, observationRegistry, observationRegistryPostProcessor, observationRestClientCustomizer, observationRestTemplateCustomizer, org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration, org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration, org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration, org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration, org.springframework.boot.autoconfigure.AutoConfigurationPackages, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration, org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration, org.springframework.boot.context.internalConfigurationPropertiesBinder, org.springframework.boot.context.properties.BoundConfigurationProperties, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter, org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor, org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration, org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer, org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration, org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration, org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration, org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration, org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration, org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration, org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration, org.springframework.cloud.commons.util.UtilAutoConfiguration, org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration, org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher, org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration, org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$EurekaServerConfigBeanConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.event.internalEventListenerFactory, org.springframework.context.event.internalEventListenerProcessor, parameterNamesModule, pathMappedEndpoints, peerAwareInstanceRegistry, peerEurekaNodes, pingHealthContributor, preserveErrorControllerTargetClassPostProcessor, processorMetrics, propertiesMeterFilter, propertiesObservationFilter, propertySourcesPlaceholderConfigurer, reactiveHealthContributorRegistry, refreshEndpoint, refreshEventListener, refreshScope, refreshScopeHealthIndicator, refreshScopeLifecycle, replicationClientAdditionalFilters, requestContextFilter, requestMappingHandlerAdapter, requestMappingHandlerMapping, resourceHandlerMapping, restClientBuilder, restClientBuilderConfigurer, restClientSsl, restTemplateBuilder, restTemplateBuilderConfigurer, restTemplateCustomizer, routerFunctionMapping, sbomEndpoint, sbomEndpointWebExtension, scheduledTasksEndpoint, scopedTarget.eurekaApplicationInfoManager, scopedTarget.eurekaClient, scopedTarget.eurekaRegistration, server-org.springframework.boot.autoconfigure.web.ServerProperties, serverCodecs, serviceManagementMetadataProvider, serviceRegistryEndpoint, servletEndpointDiscoverer, servletEndpointRegistrar, servletExposeExcludePropertyEndpointFilter, servletMappingDescriptionProvider, servletWebChildContextFactory, servletWebServerFactoryCustomizer, simpleAsyncTaskExecutorBuilder, simpleAsyncTaskSchedulerBuilder, simpleConfig, simpleControllerHandlerAdapter, simpleDiscoveryClient, simpleDiscoveryProperties, simpleMeterRegistry, sleuthPresentVerifier, spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties, spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties, spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties, spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties, spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties, spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties, spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties, spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties, spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties, spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, spring.web-org.springframework.boot.autoconfigure.web.WebProperties, springBootVersionVerifier, springCloudCommonsFeatures, sslBundleRegistry, sslPropertiesSslBundleRegistrar, standardGsonBuilderCustomizer, standardJacksonObjectMapperBuilderCustomizer, startupTimeMetrics, stringHttpMessageConverter, taskExecutorBuilder, taskSchedulerBuilder, themeResolver, threadPoolTaskExecutorBuilder, threadPoolTaskSchedulerBuilder, tlsProperties, tomcatMetricsBinder, tomcatServletWebServerFactory, tomcatServletWebServerFactoryCustomizer, tomcatWebServerFactoryCustomizer, uptimeMetrics, viewControllerHandlerMapping, viewNameTranslator, viewResolver, webEndpointDiscoverer, webEndpointPathMapper, webEndpointServletHandlerMapping, webExposeExcludePropertyEndpointFilter, webMvcObservationFilter, webServerFactoryCustomizerBeanPostProcessor, websocketServletWebServerCustomizer, welcomePageHandlerMapping, welcomePageNotAcceptableHandlerMapping, xForwarderHeadersTransformer, zoneConfig] [sessionId=, requestId=]
2025-08-18 22:22:30 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=e4736c09-5c94-3676-a372-5775016baa81 [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'forceAutoProxyCreatorToUseClassProxying' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointGroupsBeanPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'meterRegistryPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRegistryPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesBeans' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lbRestClientPostProcessor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead. [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'deferringLoadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies. [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lbRestClientPostProcessor' via factory method to bean named 'deferringLoadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lbRestClientPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.u.c.s.UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@62d1dc3c] [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultsBindHandlerAdvisor' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerClientsDefaultsMappingsProvider' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultsBindHandlerAdvisor' via factory method to bean named 'loadBalancerClientsDefaultsMappingsProvider' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslBundleRegistry' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileWatcher' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\Surya\.m2\repository\org\springframework\boot\spring-boot\3.3.0\spring-boot-3.3.0.jar [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\Surya\.m2\repository\org\springframework\boot\spring-boot\3.3.0\spring-boot-3.3.0.jar [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored. [sessionId=, requestId=]
2025-08-18 22:22:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8767 (http) [sessionId=, requestId=]
2025-08-18 22:22:30 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8767"] [sessionId=, requestId=]
2025-08-18 22:22:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat] [sessionId=, requestId=]
2025-08-18 22:22:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24] [sessionId=, requestId=]
2025-08-18 22:22:30 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] [sessionId=, requestId=]
2025-08-18 22:22:30 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1886 ms [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webMvcObservationFilter' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertiesObservationFilter' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertiesObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsObservationHandlerGrouping' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultMeterObservationHandler' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleConfig' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleConfig' via factory method to bean named 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'micrometerClock' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'simpleConfig' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'micrometerClock' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertiesMeterFilter' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertiesMeterFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpClientUriTagFilter' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpServerUriTagFilter' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultMeterObservationHandler' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultMeterObservationHandler' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jerseyFilterRegistration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaApplicationInfoManager' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerConfig' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$EurekaServerConfigBeanConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration' via constructor to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaClientConfigBean' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerConfig' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.instance.registry-org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jerseyApplication' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:22:30 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-client/2.0.2/eureka-client-2.0.2.jar!/com/netflix/discovery/provider/DiscoveryJerseyProvider.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/ApplicationsResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/ASGResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/StatusResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/ServerInfoResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/SecureVIPResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/InstancesResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/VIPResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/PeerReplicationResource.class] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyFilterRegistration' via factory method to bean named 'jerseyApplication' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaVersionFilterRegistration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaVersionFilterRegistration' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaVersionFilterRegistration' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointRegistrar' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointDiscoverer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointPathMapper' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletExposeExcludePropertyEndpointFilter' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletExposeExcludePropertyEndpointFilter' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'dispatcherServletRegistration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaRegistration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter' [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, eurekaVersionFilterRegistration urls=[/eureka/*] order=0, jerseyFilterRegistration urls=[/eureka/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105 [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/] [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.c.n.e.s.EurekaServerAutoConfiguration$1 - Filter 'eurekaVersionFilterRegistration' configured for use [sessionId=, requestId=]
2025-08-18 22:22:31 [main] DEBUG o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:22:31 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson [sessionId=, requestId=]
2025-08-18 22:22:31 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson [sessionId=, requestId=]
2025-08-18 22:22:32 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml [sessionId=, requestId=]
2025-08-18 22:22:32 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryServiceApplication' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerMarkerBean' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointObjectMapperWebMvcConfigurer' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointObjectMapper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'endpointObjectMapperWebMvcConfigurer' via factory method to bean named 'endpointObjectMapper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'themeResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'flashMapManager' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider [sessionId=, requestId=]
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:270)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:85)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.saviynt.discovery.DiscoveryServiceApplication.main(DiscoveryServiceApplication.java:12)
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse) [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.c.n.e.s.EurekaController:
	{GET [/]}: status(HttpServletRequest,Map)
	{GET [/lastn]}: lastn(HttpServletRequest,Map) [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 4 mappings in 'requestMappingHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPatternParser' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {} [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2XmlHttpMessageConverter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModule' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModuleEntries' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.a.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.saviynt.discovery'. Automatic @Repository and @Entity scanning is enabled. [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2XmlHttpMessageConverter' via factory method to bean named 'jacksonObjectMapperBuilder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]} [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewNameTranslator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerViewResolver' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beansEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beansEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggingRebinder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'refreshScope' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScopeLifecycle' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshScopeLifecycle' via factory method to bean named 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshEventListener' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshEventListener' via factory method to bean named 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cachesEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cachesEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'cachesEndpointWebExtension' via factory method to bean named 'cachesEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthStatusAggregator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthStatusAggregator' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthHttpCodeStatusMapper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthHttpCodeStatusMapper' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroups' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroups' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'diskSpaceHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'diskSpaceHealthIndicator' via factory method to bean named 'management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pingHealthContributor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScopeHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesRebinder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesRebinder' via factory method to bean named 'configurationPropertiesBeans' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshScopeHealthIndicator' via factory method to bean named 'configurationPropertiesRebinder' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryCompositeHealthContributor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inetUtils' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inetUtilsProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'inetUtils' via factory method to bean named 'inetUtilsProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serviceManagementMetadataProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'inetUtils' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'serviceManagementMetadataProvider' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.c.n.e.m.DefaultManagementMetadataProvider - Constructed eureka meta-data healthcheckUrl: http://localhost:8767/actuator/health [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.c.n.e.m.DefaultManagementMetadataProvider - Constructed eureka meta-data statusPageUrl: http://localhost:8767/actuator/info [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryClientHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClientHealthIndicator' via factory method to bean named 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryCompositeHealthContributor' via factory method to bean named 'eurekaHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryCompositeHealthContributor' via factory method to bean named 'discoveryClientHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'diskSpaceHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'pingHealthContributor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'refreshScopeHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'discoveryCompositeHealthContributor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointGroupMembershipValidator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroupMembershipValidator' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroupMembershipValidator' via factory method to bean named 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'reactiveHealthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'diskSpaceHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'pingHealthContributor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'refreshScopeHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'discoveryCompositeHealthContributor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointWebMvcHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointOperationParameterMapper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointMediaTypes' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointOperationParameterMapper' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointMediaTypes' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointCachingOperationInvokerAdvisor' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'endpointCachingOperationInvokerAdvisor' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webExposeExcludePropertyEndpointFilter' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebMvcHandlerMapping' via factory method to bean named 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebMvcHandlerMapping' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesReportEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesReportEndpoint' via factory method to bean named 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpoint' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpoint' via factory method to bean named 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sbomEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.sbom-org.springframework.boot.actuate.sbom.SbomProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration' via constructor to bean named 'management.endpoint.sbom-org.springframework.boot.actuate.sbom.SbomProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sbomEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'infoEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conditionsReportEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'conditionsReportEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesReportEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesReportEndpointWebExtension' via factory method to bean named 'configurationPropertiesReportEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesReportEndpointWebExtension' via factory method to bean named 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpointWebExtension' via factory method to bean named 'environmentEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpointWebExtension' via factory method to bean named 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggersEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loggersEndpoint' via factory method to bean named 'springBootLoggingSystem' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'heapDumpWebEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dumpEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsEndpoint' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sbomEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sbomEndpointWebExtension' via factory method to bean named 'sbomEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'scheduledTasksEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingsEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingsEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletMappingDescriptionProvider' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletMappingDescriptionProvider' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'filterMappingDescriptionProvider' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshEndpoint' via factory method to bean named 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'featuresEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaFeature' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springCloudCommonsFeatures' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerFeature' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serviceRegistryEndpoint' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration' via constructor to bean named 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServiceRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServiceRegistry' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'serviceRegistryEndpoint' via factory method to bean named 'eurekaServiceRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebChildContextFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'managementServletContext' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'managementServletContext' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerExposeExcludePropertyEndpointFilter' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pathMappedEndpoints' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentManager' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentManager' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'meterRegistryCloser' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmGcMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmHeapPressureMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmMemoryMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmThreadMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classLoaderMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmInfoMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmCompilationMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'logbackMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'uptimeMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'processorMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileDescriptorMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'diskSpaceMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'diskSpaceMetrics' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'startupTimeMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'startupTimeMetrics' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eagerTaskExecutorMetrics' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatMetricsBinder' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatMetricsBinder' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gsonBuilder' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gson' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientSsl' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientBuilderConfigurer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRestClientCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestClientCustomizer' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestClientCustomizer' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRestTemplateCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestTemplateCustomizer' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestTemplateCustomizer' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observabilitySchedulingConfigurer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observabilitySchedulingConfigurer' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerConfigurer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.w.s.v.f.FreeMarkerConfigurer - File system access not preferred: using SpringTemplateLoader [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.u.f.SpringTemplateLoader - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28, started on Mon Aug 18 22:22:28 IST 2025] and template loader path [classpath:/templates/] [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration' via constructor to bean named 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'compositeDiscoveryClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleDiscoveryClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleDiscoveryProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.name' in PropertySource 'environmentProperties' with value of type String [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleDiscoveryClient' via factory method to bean named 'simpleDiscoveryProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'simpleDiscoveryClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'discoveryClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaAutoServiceRegistration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaServiceRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaRegistration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tlsProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultEurekaClientHttpRequestFactorySupplier' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultEurekaClientHttpRequestFactorySupplier' via factory method to bean named 'eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jersey3DiscoveryClientOptionalArgs' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'zoneConfig' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'zoneConfig' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerClientFactory' via factory method to bean named 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerEagerContextInitializer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerEagerContextInitializer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerEagerContextInitializer' via factory method to bean named 'spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerChildContextInitializer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerChildContextInitializer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerChildContextInitializer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'blockingLoadBalancerClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'blockingLoadBalancerClient' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerServiceInstanceCookieTransformer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerServiceInstanceCookieTransformer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'xForwarderHeadersTransformer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'xForwarderHeadersTransformer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerRequestFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerRequestFactory' via factory method to bean named 'blockingLoadBalancerClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'blockingLoadBalancerClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'loadBalancerRequestFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restTemplateCustomizer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restTemplateCustomizer' via factory method to bean named 'loadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancedRestTemplateInitializerDeprecated' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'compositeCompatibilityVerifier' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springBootVersionVerifier' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'springBootVersionVerifier' via factory method to bean named 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sleuthPresentVerifier' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'springBootVersionVerifier' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'sleuthPresentVerifier' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.c.SpringBootVersionVerifier - Version found in Boot manifest [3.3.0] [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.c.SpringBootVersionVerifier - Version found in Boot manifest [3.3.0] [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.c.CompositeCompatibilityVerifier - All conditions are passing [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultLoadBalancerCacheManager' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultLoadBalancerCacheManager' via factory method to bean named 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'caffeineWarnLogger' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaLoadBalancerProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerBootstrap' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jersey3EurekaServerHttpClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerAwareInstanceRegistry' via factory method to bean named 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerAwareInstanceRegistry' via factory method to bean named 'jersey3EurekaServerHttpClientFactory' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerAwareInstanceRegistry' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jersey3TransportClientFactories' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaApplicationInfoManager' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'jersey3TransportClientFactories' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaApplicationInfoManager' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  c.netflix.discovery.DiscoveryClient - Client configured to neither register nor query for data. [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1755535953527 with initial instances count: 0 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerContext' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'peerEurekaNodes' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'replicationClientAdditionalFilters' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'replicationClientAdditionalFilters' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'peerEurekaNodes' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  c.n.e.DefaultEurekaServerContext - Initializing ... [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 22:22:33 [main] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  c.n.e.r.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [] [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  c.n.e.DefaultEurekaServerContext - Initialized [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerBootstrap' via factory method to bean named 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerBootstrap' via factory method to bean named 'eurekaServerContext' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaController' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka-org.springframework.cloud.netflix.eureka.server.EurekaProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaController' via factory method to bean named 'eureka-org.springframework.cloud.netflix.eureka.server.EurekaProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.dashboard-org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointServletHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'endpointMediaTypes' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 17 endpoints beneath base path '/actuator' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerEndpointHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration' via constructor to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase -2147483647 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'springBootLoggingLifecycle' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 0 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaApplicationInfoManager' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application DISCOVERY-SERVICE with eureka with status UP [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.c.d.h.DiscoveryClientHealthIndicator - Discovery Client has been initialized [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'eurekaAutoServiceRegistration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147481599 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8767"] [sessionId=, requestId=]
2025-08-18 22:22:33 [Thread-9] INFO  o.s.c.n.e.s.EurekaServerBootstrap - isAws returned false [sessionId=, requestId=]
2025-08-18 22:22:33 [Thread-9] INFO  o.s.c.n.e.s.EurekaServerBootstrap - Initialized server context [sessionId=, requestId=]
2025-08-18 22:22:33 [Thread-9] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Got 1 instances from neighboring DS node [sessionId=, requestId=]
2025-08-18 22:22:33 [Thread-9] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Renew threshold is: 1 [sessionId=, requestId=]
2025-08-18 22:22:33 [Thread-9] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Changing status to UP [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8767 (http) with context path '/' [sessionId=, requestId=]
2025-08-18 22:22:33 [Thread-9] INFO  o.s.c.n.e.s.EurekaServerInitializerConfiguration - Started Eureka Server [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8767 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147482623 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown' [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.a.l.ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   AutoServiceRegistrationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   AutoServiceRegistrationConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (OnPropertyCondition)
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on BlockingRestClassesPresentCondition.RestClientPresent @ConditionalOnClass found required class 'org.springframework.web.client.RestClient'; NestedCondition on BlockingRestClassesPresentCondition.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (BlockingRestClassesPresentCondition)

   BlockingLoadBalancerClientAutoConfiguration#blockingLoadBalancerClient matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration#loadBalancerServiceInstanceCookieTransformer matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration#xForwarderHeadersTransformer matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.features.enabled) matched (OnPropertyCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration#featuresEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.DiscoveryClient; SearchStrategy: all) found beans 'discoveryClient', 'simpleDiscoveryClient', 'compositeDiscoveryClient' (OnBeanCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryClientHealthIndicator matched:
      - @ConditionalOnProperty (spring.cloud.discovery.client.health-indicator.enabled) matched (OnPropertyCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryCompositeHealthContributor matched:
      - @ConditionalOnProperty (spring.cloud.discovery.client.composite-indicator.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator; SearchStrategy: all) found beans 'eurekaHealthIndicator', 'discoveryClientHealthIndicator' (OnBeanCondition)

   CompatibilityVerifierAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.compatibility-verifier.enabled) matched (OnPropertyCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   DiscoveryClientOptionalArgsConfiguration#defaultEurekaClientHttpRequestFactorySupplier matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched (OnPropertyCondition)

   EurekaClientAutoConfiguration#eurekaAutoServiceRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaClientConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClientConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaInstanceConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.EurekaInstanceConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#serviceManagementMetadataProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration#eurekaHealthIndicator matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.EurekaHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.refresh.enable=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaApplicationInfoManager matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.ApplicationInfoManager; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaClient matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClient; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaDiscoveryClientConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)

   EurekaDiscoveryClientConfiguration#discoveryClient matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaDiscoveryClientConfiguration.EurekaClientConfigurationRefresher matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent' (OnClassCondition)

   EurekaServerAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration$Marker; SearchStrategy: all) found bean 'eurekaServerMarkerBean' (OnBeanCondition)

   EurekaServerAutoConfiguration#eurekaController matched:
      - @ConditionalOnProperty (eureka.dashboard.enabled) matched (OnPropertyCondition)

   EurekaServerAutoConfiguration#eurekaServerContext matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.EurekaServerContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#jersey3DiscoveryClientOptionalArgs matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.AbstractDiscoveryClientOptionalArgs; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#jersey3EurekaServerHttpClientFactory matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.transport.EurekaServerHttpClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#jersey3TransportClientFactories matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.shared.transport.jersey.TransportClientFactories; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#peerEurekaNodes matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.cluster.PeerEurekaNodes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#replicationClientAdditionalFilters matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.server.ReplicationClientAdditionalFilters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration.EurekaServerConfigBeanConfiguration#eurekaServerConfig matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.EurekaServerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) found bean 'jacksonObjectMapperBuilder' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration#mappingJackson2XmlHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LifecycleMvcEndpointAutoConfiguration#environmentManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.environment.EnvironmentManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration matched:
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on BlockingRestClassesPresentCondition.RestClientPresent @ConditionalOnClass found required class 'org.springframework.web.client.RestClient'; NestedCondition on BlockingRestClassesPresentCondition.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (BlockingRestClassesPresentCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'blockingLoadBalancerClient' (OnBeanCondition)

   org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (OnPropertyCondition)

   LoadBalancerAutoConfiguration#loadBalancerClientFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration#loadBalancerRequestFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration#zoneConfig matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.DeferringLoadBalancerInterceptorConfig#deferringLoadBalancerInterceptor matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.DeferringLoadBalancerInterceptorConfig#lbRestClientPostProcessor matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor; SearchStrategy: all) found bean 'deferringLoadBalancerInterceptor'; @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRestClientBuilderBeanPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition.RetryDisabled @ConditionalOnProperty (spring.cloud.loadbalancer.retry.enabled=false) did not find property 'spring.cloud.loadbalancer.retry.enabled'; NestedCondition on LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition.RetryTemplateMissing @ConditionalOnMissingClass did not find unwanted class 'org.springframework.retry.support.RetryTemplate' (LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig#restTemplateCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerCacheAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.cache.CacheManager', 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' (OnClassCondition)
      - AllNestedConditions 2 matched 0 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition.LoadBalancerCacheEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.cache.enabled) matched; NestedCondition on LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition.LoadBalancerEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition)

   LoadBalancerCacheAutoConfiguration.DefaultLoadBalancerCacheManagerConfiguration matched:
      - @ConditionalOnClass found required class 'com.stoyanr.evictor.ConcurrentMapWithTimedEviction' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineCacheManagerClassMissing @ConditionalOnMissingClass found unwanted class 'org.springframework.cache.caffeine.CaffeineCacheManager'; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineClassMissing @ConditionalOnMissingClass did not find unwanted class 'com.github.benmanes.caffeine.cache.Caffeine' (LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition)

   LoadBalancerCacheAutoConfiguration.DefaultLoadBalancerCacheManagerConfiguration#defaultLoadBalancerCacheManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerCacheAutoConfiguration.LoadBalancerCacheManagerWarnConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineCacheManagerClassMissing @ConditionalOnMissingClass found unwanted class 'org.springframework.cache.caffeine.CaffeineCacheManager'; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineClassMissing @ConditionalOnMissingClass did not find unwanted class 'com.github.benmanes.caffeine.cache.Caffeine' (LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition)

   LoadBalancerEurekaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched (OnPropertyCondition)

   LoadBalancerEurekaAutoConfiguration#eurekaLoadBalancerProperties matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ReactorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RefreshAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.refresh.enabled) matched (OnPropertyCondition)

   RefreshAutoConfiguration#configDataContextRefresher matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.refresh.ConfigDataContextRefresher; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - NoneNestedConditions 0 matched 3 did not; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnBootstrapEnabled @ConditionalOnProperty (spring.cloud.bootstrap.enabled) did not find property 'spring.cloud.bootstrap.enabled'; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnUseLegacyProcessingEnabled @ConditionalOnProperty (spring.config.use-legacy-processing) did not find property 'spring.config.use-legacy-processing'; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnBootstrapMarkerClassPresent @ConditionalOnClass did not find required class 'org.springframework.cloud.bootstrap.marker.Marker' (ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition)

   RefreshAutoConfiguration#loggingRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.logging.LoggingRebinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScope matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.scope.refresh.RefreshScope; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScopeLifecycle matched:
      - @ConditionalOnProperty (spring.cloud.refresh.on-restart.enabled) matched (OnPropertyCondition)

   RefreshEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration', 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   RefreshEndpointAutoConfiguration#refreshScopeHealthIndicator matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.health.RefreshScopeHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   RefreshEndpointAutoConfiguration.RefreshEndpointConfiguration#refreshEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.refresh.ContextRefresher; SearchStrategy: all) found bean 'configDataContextRefresher'; @ConditionalOnMissingBean (types: org.springframework.cloud.endpoint.RefreshEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ResourceServerTokenRelayAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.cloud.mvc.token-relay.enabled) matched (OnPropertyCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestartEndpointWithoutIntegrationConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.springframework.integration.monitor.IntegrationMBeanExporter' (OnClassCondition)

   SbomEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   SbomEndpointAutoConfiguration#sbomEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.sbom.SbomEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SbomEndpointAutoConfiguration#sbomEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.sbom.SbomEndpoint; SearchStrategy: all) found bean 'sbomEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.sbom.SbomEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.ServiceRegistry; SearchStrategy: all) found bean 'eurekaServiceRegistry' (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration#serviceRegistryEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleDiscoveryClientAutoConfiguration#simpleDiscoveryProperties matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   UtilAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.util.enabled) matched (OnPropertyCondition)

   UtilAutoConfiguration#inetUtils matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.util.InetUtils; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BlockingLoadBalancerClientAutoConfiguration.BlockingLoadBalancerRetryConfig:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CloudHypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.Link' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans of type javax.sql.DataSource (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateDiscoveryClientOptionalArgs:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateTransportClientFactories:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.DiscoveryClientOptionalArgsTlsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: com.netflix.discovery.AbstractDiscoveryClientOptionalArgs; SearchStrategy: current) did not find any beans of type com.netflix.discovery.AbstractDiscoveryClientOptionalArgs (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.WebClientConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.WebClientNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaClientConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.OnPropertyDisabled @ConditionalOnProperty (eureka.client.refresh.enable=false) did not find property 'eureka.client.refresh.enable'; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingScope @ConditionalOnMissingBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found beans of type 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingClass @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition)

   EurekaClientConfigServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.server.config.ConfigServerProperties' (OnClassCondition)

   EurekaDiscoveryClientConfiguration.EurekaHealthCheckHandlerConfiguration:
      Did not match:
         - @ConditionalOnProperty (eureka.client.healthcheck.enabled) did not find property 'eureka.client.healthcheck.enabled' (OnPropertyCondition)

   EurekaReactiveDiscoveryClientConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   EurekaServerAutoConfiguration#traceFilterRegistration:
      Did not match:
         - @ConditionalOnBean (names: httpTraceFilter; SearchStrategy: all) did not find any beans named httpTraceFilter (OnBeanCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManagerFactory' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#processInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.process.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JdbcClientAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate' (OnBeanCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.DispatcherServlet' dispatcherServlet (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JmxEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   LoadBalancerCacheAutoConfiguration.CaffeineLoadBalancerCacheManagerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   LoadBalancerEurekaAutoConfiguration#zoneConfig:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig; SearchStrategy: all) found beans of type 'org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig' zoneConfig (OnBeanCondition)

   LoadBalancerStatsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.loadbalancer.stats.micrometer.enabled=true) did not find property 'spring.cloud.loadbalancer.stats.micrometer.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint:
      Did not match:
         - Log File did not find logging file (LogFileWebEndpointAutoConfiguration.LogFileCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.ReactiveMongoTemplate' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2LoadBalancerClientAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.oauth2.load-balanced.enabled) did not find property 'spring.cloud.oauth2.load-balanced.enabled' (OnPropertyCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   PauseResumeEndpointsConfiguration#pauseEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.context.restart.RestartEndpoint; SearchStrategy: all) did not find any beans of type org.springframework.cloud.context.restart.RestartEndpoint (OnBeanCondition)

   PauseResumeEndpointsConfiguration#resumeEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.context.restart.RestartEndpoint; SearchStrategy: all) did not find any beans of type org.springframework.cloud.context.restart.RestartEndpoint (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheusmetrics.PrometheusMeterRegistry' (OnClassCondition)

   PrometheusSimpleclientExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusSimpleclientMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveCommonsClientAutoConfiguration.ReactiveDiscoveryLoadBalancerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   ReactiveCompositeDiscoveryClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorLoadBalancerClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RefreshAutoConfiguration#legacyContextRefresher:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnBootstrapEnabled @ConditionalOnProperty (spring.cloud.bootstrap.enabled) did not find property 'spring.cloud.bootstrap.enabled'; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnUseLegacyProcessingEnabled @ConditionalOnProperty (spring.config.use-legacy-processing) did not find property 'spring.config.use-legacy-processing'; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnBootstrapMarkerClassPresent @ConditionalOnClass did not find required class 'org.springframework.cloud.bootstrap.marker.Marker' (ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition)

   RefreshAutoConfiguration.JpaInvokerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   RepositoryMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.repository.Repository' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   RestartEndpointWithIntegrationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.monitor.IntegrationMBeanExporter' (OnClassCondition)

   RestartEndpointWithoutIntegrationConfiguration#restartEndpointWithoutIntegration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.restart.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SimpleReactiveDiscoveryClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   WritableEnvironmentEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.endpoint.env.post.enabled) did not find property 'management.endpoint.env.post.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.env.EnvironmentEndpoint', 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Encoding' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.cloud.client.CommonsClientAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration

    org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration

    org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration

    org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration


 [sessionId=, requestId=]
2025-08-18 22:22:33 [main] INFO  c.s.d.DiscoveryServiceApplication - Started DiscoveryServiceApplication in 5.942 seconds (process running for 6.434) [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.a.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT [sessionId=, requestId=]
2025-08-18 22:22:33 [main] DEBUG o.s.b.a.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6ffa0691 [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3e12b72c [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-3] WARN  c.n.e.r.AbstractInstanceRegistry - DS: Registry: lease doesn't exist, registering resource: ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-3] WARN  c.n.e.resources.InstanceResource - Not Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode  [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/error?status=UP&lastDirtyTimestamp=1755535930681", parameters={masked} [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest) [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, application/*+json] and supported [application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8] [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Mon Aug 18 22:22:40 IST 2025, status=404, error=Not Found, path=/eureka/apps/ANALYTICS-SE (truncated)...] [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:analytics-service:8093 (replication=null) [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - register ANALYTICS-SERVICE, vip analytics-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-2] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance ANALYTICS-SERVICE/surya.Dlink:analytics-service:8093 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404 [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:analytics-service:8093 (replication=null) [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - register ANALYTICS-SERVICE, vip analytics-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755535930681, provided=1755535961013 [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:41 [http-nio-8767-exec-4] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance ANALYTICS-SERVICE/surya.Dlink:analytics-service:8093 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] WARN  c.n.e.r.AbstractInstanceRegistry - DS: Registry: lease doesn't exist, registering resource: CRM-SERVICE - surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] WARN  c.n.e.resources.InstanceResource - Not Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/error?status=UP&lastDirtyTimestamp=1755535915548", parameters={masked} [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest) [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, application/*+json] and supported [application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8] [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Mon Aug 18 22:22:55 IST 2025, status=404, error=Not Found, path=/eureka/apps/CRM-SERVICE/ (truncated)...] [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-7] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/surya.Dlink:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755535915548, provided=1755535975679 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:55 [http-nio-8767-exec-9] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/surya.Dlink:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] WARN  c.n.e.r.AbstractInstanceRegistry - DS: Registry: lease doesn't exist, registering resource: AUTH-SERVICE - surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] WARN  c.n.e.resources.InstanceResource - Not Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/error?status=UP&lastDirtyTimestamp=1755535947378", parameters={masked} [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest) [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, application/*+json] and supported [application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8] [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Mon Aug 18 22:22:57 IST 2025, status=404, error=Not Found, path=/eureka/apps/AUTH-SERVICE (truncated)...] [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:auth-service:8082 (replication=null) [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - register AUTH-SERVICE, vip auth-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-1] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance AUTH-SERVICE/surya.Dlink:auth-service:8082 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:auth-service:8082 (replication=null) [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - register AUTH-SERVICE, vip auth-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755535977455, provided=1755535977455 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:22:57 [http-nio-8767-exec-2] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance AUTH-SERVICE/surya.Dlink:auth-service:8082 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:23:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:23:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:23:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:23:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_3_ [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:api-gateway:8080 (replication=null) [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - register API-GATEWAY, vip api-gateway, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V1 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V1 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V2 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V2 XML, full [sessionId=, requestId=]
2025-08-18 22:23:01 [http-nio-8767-exec-4] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance API-GATEWAY/surya.Dlink:api-gateway:8080 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:23:11 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:23:11 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:11 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:23:11 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:23:25 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:23:25 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:25 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:23:25 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:23:27 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:23:27 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:27 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:23:27 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:23:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:23:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:23:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:23:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 7 [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:analytics-service:8093 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:analytics-service:8093 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:auth-service:8082 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:auth-service:8082 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:api-gateway:8080 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:23:31 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:23:33 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:23:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:23:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:23:41 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:23:41 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:23:41 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:23:55 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:23:55 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:23:55 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:23:57 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:23:57 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:23:57 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:23:57 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:24:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:24:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:24:01 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:01 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:24:01 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:11 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:11 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:11 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:24:11 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:25 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:25 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:25 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:24:25 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:27 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:27 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:27 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:24:27 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:24:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:24:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:24:31 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:31 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:31 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:24:31 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:33 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 15ms [sessionId=, requestId=]
2025-08-18 22:24:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:24:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:24:41 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:41 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:41 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:24:41 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:55 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:55 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:24:55 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:24:57 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:24:57 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:24:57 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:24:57 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:25:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:25:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:25:01 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:01 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:01 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:25:01 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:11 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:11 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:11 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:25:11 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:25 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:25 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:25 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:25:25 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:27 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:27 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:27 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:25:27 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:25:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:25:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:25:31 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:31 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:31 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:25:31 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:33 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 8ms [sessionId=, requestId=]
2025-08-18 22:25:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:25:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:25:41 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:41 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:41 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:25:41 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:55 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:55 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:55 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:25:55 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:25:57 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:25:57 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:25:57 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:25:57 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:26:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:26:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:26:01 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:01 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:01 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:26:01 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:11 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:11 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:11 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:26:11 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:25 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:25 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:25 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:26:25 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:27 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:27 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:27 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:26:27 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:26:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:26:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:26:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:26:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:26:31 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:31 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:31 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:26:31 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:33 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 14ms [sessionId=, requestId=]
2025-08-18 22:26:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:26:33 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:26:41 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:41 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:41 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:26:41 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:55 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:55 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:55 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:26:55 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:26:57 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:26:57 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:26:57 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:26:57 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:28:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:28:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:28:29 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 22:28:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:28:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:28:31 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:28:31 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:28:31 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:28:31 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:28:40 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:28:40 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:28:40 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:28:40 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:28:55 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:28:55 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:28:55 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:28:55 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:28:57 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:28:57 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:28:57 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:28:57 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:28:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:28:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:28:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:29:01 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:01 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:01 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:29:01 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:03 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 89559ms [sessionId=, requestId=]
2025-08-18 22:29:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:29:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:29:10 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:10 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:10 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:29:10 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:25 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:25 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:25 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:29:25 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:27 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:27 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:27 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:29:27 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:29:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:29:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:29:31 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:31 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:31 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:29:31 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:40 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:40 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:40 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:29:40 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:55 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:55 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:55 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:29:55 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:57 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:29:57 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:29:57 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:29:57 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:29:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:29:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:29:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:29:59 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:29:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:30:01 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:01 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:30:01 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:03 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 8ms [sessionId=, requestId=]
2025-08-18 22:30:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:30:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:30:10 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:10 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:30:10 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:25 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:25 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:25 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:30:25 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:27 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:27 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:27 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:30:27 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:30:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:30:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:30:31 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:31 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:31 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:30:31 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:40 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:40 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:40 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:30:40 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:55 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:55 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:55 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:30:55 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:57 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:30:57 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:30:57 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:30:57 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:30:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:30:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:30:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:31:01 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:01 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:01 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:31:01 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:03 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 11ms [sessionId=, requestId=]
2025-08-18 22:31:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:31:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:31:11 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:11 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:11 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:31:11 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:25 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:25 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:25 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:31:25 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:27 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:27 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:27 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:31:27 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:31:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:31:29 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 22:31:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:31:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:31:31 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:31 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:31 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:31:31 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:41 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:41 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:41 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:31:41 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:55 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:55 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:55 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:31:55 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:57 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:31:57 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:31:57 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:31:57 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:31:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:31:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:31:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:32:01 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:01 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:01 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:32:01 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:03 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms [sessionId=, requestId=]
2025-08-18 22:32:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:32:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:32:11 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:11 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:11 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:32:11 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:25 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:25 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:25 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:32:25 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:27 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:27 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:27 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:32:27 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:32:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:32:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:32:31 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:31 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:31 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:32:31 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:41 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:41 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:32:41 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:55 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:55 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:55 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:32:55 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:57 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:32:57 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:32:57 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:32:57 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:32:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:32:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:32:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:32:59 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:32:59 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:33:01 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:33:01 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:33:01 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:33:01 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:33:03 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:33:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:33:03 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:33:11 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:33:11 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:33:11 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:33:11 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:33:25 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:33:25 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:33:25 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:33:25 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:33:27 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId surya.Dlink:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:33:27 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:33:27 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:33:27 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - surya.Dlink:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:33:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:33:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:33:29 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:33:31 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:33:31 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:33:31 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:33:31 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:33:41 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:33:41 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:33:41 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:33:41 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:33:55 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:33:55 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:33:55 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:33:55 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:34:28 [main] INFO  c.s.d.DiscoveryServiceApplication - Starting DiscoveryServiceApplication using Java 17.0.15 with PID 20464 (C:\discovery-server\discover-service\target\classes started by Surya in C:\discovery-server\discover-service) [sessionId=, requestId=]
2025-08-18 22:34:28 [main] DEBUG c.s.d.DiscoveryServiceApplication - Running with Spring Boot v3.3.0, Spring v6.1.8 [sessionId=, requestId=]
2025-08-18 22:34:28 [main] INFO  c.s.d.DiscoveryServiceApplication - No active profile set, falling back to 1 default profile: "default" [sessionId=, requestId=]
2025-08-18 22:34:28 [main] DEBUG o.s.boot.SpringApplication - Loading source class com.saviynt.discovery.DiscoveryServiceApplication [sessionId=, requestId=]
2025-08-18 22:34:28 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28 [sessionId=, requestId=]
2025-08-18 22:34:28 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' [sessionId=, requestId=]
2025-08-18 22:34:28 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScope' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.cloud.context.scope.GenericScope - Generating bean factory id from names: [applicationAvailability, applicationTaskExecutor, basicErrorController, beanNameHandlerMapping, beanNameViewResolver, beansEndpoint, blockingLoadBalancerClient, cachesEndpoint, cachesEndpointWebExtension, caffeineWarnLogger, characterEncodingFilter, classLoaderMetrics, compositeCompatibilityVerifier, compositeDiscoveryClient, conditionsReportEndpoint, configDataContextRefresher, configurationPropertiesBeans, configurationPropertiesRebinder, configurationPropertiesReportEndpoint, configurationPropertiesReportEndpointWebExtension, controllerEndpointDiscoverer, controllerEndpointHandlerMapping, controllerExposeExcludePropertyEndpointFilter, conventionErrorViewResolver, default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification, defaultEurekaClientHttpRequestFactorySupplier, defaultLoadBalancerCacheManager, defaultMeterObservationHandler, defaultServletHandlerMapping, defaultViewResolver, defaultsBindHandlerAdvisor, deferringLoadBalancerInterceptor, discoveryClient, discoveryClientHealthIndicator, discoveryCompositeHealthContributor, discoveryServiceApplication, diskSpaceHealthIndicator, diskSpaceMetrics, dispatcherServlet, dispatcherServletMappingDescriptionProvider, dispatcherServletRegistration, dumpEndpoint, eagerTaskExecutorMetrics, endpointCachingOperationInvokerAdvisor, endpointMediaTypes, endpointObjectMapper, endpointObjectMapperWebMvcConfigurer, endpointOperationParameterMapper, environmentEndpoint, environmentEndpointWebExtension, environmentManager, error, errorAttributes, errorPageCustomizer, errorPageRegistrarBeanPostProcessor, eureka-org.springframework.cloud.netflix.eureka.server.EurekaProperties, eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties, eureka.dashboard-org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties, eureka.instance.registry-org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties, eurekaApplicationInfoManager, eurekaAutoServiceRegistration, eurekaClient, eurekaClientConfigBean, eurekaController, eurekaFeature, eurekaHealthIndicator, eurekaInstanceConfigBean, eurekaLoadBalancerProperties, eurekaRegistration, eurekaServerBootstrap, eurekaServerConfig, eurekaServerContext, eurekaServerFeature, eurekaServerMarkerBean, eurekaServiceRegistry, eurekaVersionFilterRegistration, featuresEndpoint, fileDescriptorMetrics, fileWatcher, filterMappingDescriptionProvider, flashMapManager, forceAutoProxyCreatorToUseClassProxying, formContentFilter, freeMarkerConfiguration, freeMarkerConfigurer, freeMarkerViewResolver, gson, gsonBuilder, handlerExceptionResolver, handlerFunctionAdapter, healthContributorRegistry, healthEndpoint, healthEndpointGroupMembershipValidator, healthEndpointGroups, healthEndpointGroupsBeanPostProcessor, healthEndpointWebExtension, healthEndpointWebMvcHandlerMapping, healthHttpCodeStatusMapper, healthStatusAggregator, heapDumpWebEndpoint, httpMessageConvertersRestClientCustomizer, httpRequestHandlerAdapter, inetUtils, inetUtilsProperties, infoEndpoint, jacksonObjectMapper, jacksonObjectMapperBuilder, jersey3DiscoveryClientOptionalArgs, jersey3EurekaServerHttpClientFactory, jersey3TransportClientFactories, jerseyApplication, jerseyFilterRegistration, jsonComponentModule, jsonMixinModule, jsonMixinModuleEntries, jvmCompilationMetrics, jvmGcMetrics, jvmHeapPressureMetrics, jvmInfoMetrics, jvmMemoryMetrics, jvmThreadMetrics, lbRestClientPostProcessor, lifecycleProcessor, loadBalancedRestTemplateInitializerDeprecated, loadBalancerChildContextInitializer, loadBalancerClientFactory, loadBalancerClientsDefaultsMappingsProvider, loadBalancerEagerContextInitializer, loadBalancerInterceptor, loadBalancerRequestFactory, loadBalancerServiceInstanceCookieTransformer, localeCharsetMappingsCustomizer, localeResolver, logbackMetrics, loggersEndpoint, loggingRebinder, management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties, management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties, management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties, management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties, management.endpoint.sbom-org.springframework.boot.actuate.sbom.SbomProperties, management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties, management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties, management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties, management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties, management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties, management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties, management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties, management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties, managementServletContext, mappingJackson2HttpMessageConverter, mappingJackson2XmlHttpMessageConverter, mappingsEndpoint, messageConverters, meterRegistryCloser, meterRegistryPostProcessor, metricsEndpoint, metricsHttpClientUriTagFilter, metricsHttpServerUriTagFilter, metricsObservationHandlerGrouping, micrometerClock, multipartConfigElement, multipartResolver, mvcContentNegotiationManager, mvcConversionService, mvcHandlerMappingIntrospector, mvcPathMatcher, mvcPatternParser, mvcResourceUrlProvider, mvcUriComponentsContributor, mvcUrlPathHelper, mvcValidator, mvcViewResolver, observabilitySchedulingConfigurer, observationRegistry, observationRegistryPostProcessor, observationRestClientCustomizer, observationRestTemplateCustomizer, org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration, org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration, org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration, org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration, org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration, org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration, org.springframework.boot.autoconfigure.AutoConfigurationPackages, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration, org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration, org.springframework.boot.context.internalConfigurationPropertiesBinder, org.springframework.boot.context.properties.BoundConfigurationProperties, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter, org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor, org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration, org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer, org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration, org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration, org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration, org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration, org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration, org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration, org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration, org.springframework.cloud.commons.util.UtilAutoConfiguration, org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration, org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher, org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration, org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$EurekaServerConfigBeanConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.event.internalEventListenerFactory, org.springframework.context.event.internalEventListenerProcessor, parameterNamesModule, pathMappedEndpoints, peerAwareInstanceRegistry, peerEurekaNodes, pingHealthContributor, preserveErrorControllerTargetClassPostProcessor, processorMetrics, propertiesMeterFilter, propertiesObservationFilter, propertySourcesPlaceholderConfigurer, reactiveHealthContributorRegistry, refreshEndpoint, refreshEventListener, refreshScope, refreshScopeHealthIndicator, refreshScopeLifecycle, replicationClientAdditionalFilters, requestContextFilter, requestMappingHandlerAdapter, requestMappingHandlerMapping, resourceHandlerMapping, restClientBuilder, restClientBuilderConfigurer, restClientSsl, restTemplateBuilder, restTemplateBuilderConfigurer, restTemplateCustomizer, routerFunctionMapping, sbomEndpoint, sbomEndpointWebExtension, scheduledTasksEndpoint, scopedTarget.eurekaApplicationInfoManager, scopedTarget.eurekaClient, scopedTarget.eurekaRegistration, server-org.springframework.boot.autoconfigure.web.ServerProperties, serverCodecs, serviceManagementMetadataProvider, serviceRegistryEndpoint, servletEndpointDiscoverer, servletEndpointRegistrar, servletExposeExcludePropertyEndpointFilter, servletMappingDescriptionProvider, servletWebChildContextFactory, servletWebServerFactoryCustomizer, simpleAsyncTaskExecutorBuilder, simpleAsyncTaskSchedulerBuilder, simpleConfig, simpleControllerHandlerAdapter, simpleDiscoveryClient, simpleDiscoveryProperties, simpleMeterRegistry, sleuthPresentVerifier, spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties, spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties, spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties, spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties, spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties, spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties, spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties, spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties, spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties, spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, spring.web-org.springframework.boot.autoconfigure.web.WebProperties, springBootVersionVerifier, springCloudCommonsFeatures, sslBundleRegistry, sslPropertiesSslBundleRegistrar, standardGsonBuilderCustomizer, standardJacksonObjectMapperBuilderCustomizer, startupTimeMetrics, stringHttpMessageConverter, taskExecutorBuilder, taskSchedulerBuilder, themeResolver, threadPoolTaskExecutorBuilder, threadPoolTaskSchedulerBuilder, tlsProperties, tomcatMetricsBinder, tomcatServletWebServerFactory, tomcatServletWebServerFactoryCustomizer, tomcatWebServerFactoryCustomizer, uptimeMetrics, viewControllerHandlerMapping, viewNameTranslator, viewResolver, webEndpointDiscoverer, webEndpointPathMapper, webEndpointServletHandlerMapping, webExposeExcludePropertyEndpointFilter, webMvcObservationFilter, webServerFactoryCustomizerBeanPostProcessor, websocketServletWebServerCustomizer, welcomePageHandlerMapping, welcomePageNotAcceptableHandlerMapping, xForwarderHeadersTransformer, zoneConfig] [sessionId=, requestId=]
2025-08-18 22:34:30 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=e4736c09-5c94-3676-a372-5775016baa81 [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'forceAutoProxyCreatorToUseClassProxying' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointGroupsBeanPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'meterRegistryPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRegistryPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesBeans' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lbRestClientPostProcessor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead. [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'deferringLoadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies. [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lbRestClientPostProcessor' via factory method to bean named 'deferringLoadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lbRestClientPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.u.c.s.UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@748f93bb] [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultsBindHandlerAdvisor' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerClientsDefaultsMappingsProvider' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultsBindHandlerAdvisor' via factory method to bean named 'loadBalancerClientsDefaultsMappingsProvider' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslBundleRegistry' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileWatcher' [sessionId=, requestId=]
2025-08-18 22:34:30 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\Surya\.m2\repository\org\springframework\boot\spring-boot\3.3.0\spring-boot-3.3.0.jar [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\Surya\.m2\repository\org\springframework\boot\spring-boot\3.3.0\spring-boot-3.3.0.jar [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored. [sessionId=, requestId=]
2025-08-18 22:34:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8767 (http) [sessionId=, requestId=]
2025-08-18 22:34:31 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8767"] [sessionId=, requestId=]
2025-08-18 22:34:31 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat] [sessionId=, requestId=]
2025-08-18 22:34:31 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24] [sessionId=, requestId=]
2025-08-18 22:34:31 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] [sessionId=, requestId=]
2025-08-18 22:34:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2836 ms [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webMvcObservationFilter' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertiesObservationFilter' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertiesObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsObservationHandlerGrouping' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultMeterObservationHandler' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleConfig' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleConfig' via factory method to bean named 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'micrometerClock' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'simpleConfig' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'micrometerClock' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertiesMeterFilter' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertiesMeterFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpClientUriTagFilter' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpServerUriTagFilter' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultMeterObservationHandler' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultMeterObservationHandler' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jerseyFilterRegistration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaApplicationInfoManager' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerConfig' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$EurekaServerConfigBeanConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration' via constructor to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaClientConfigBean' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerConfig' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:31 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.instance.registry-org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jerseyApplication' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-client/2.0.2/eureka-client-2.0.2.jar!/com/netflix/discovery/provider/DiscoveryJerseyProvider.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/ApplicationsResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/ASGResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/StatusResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/ServerInfoResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/SecureVIPResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/InstancesResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/VIPResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Surya/.m2/repository/com/netflix/eureka/eureka-core/2.0.2/eureka-core-2.0.2.jar!/com/netflix/eureka/resources/PeerReplicationResource.class] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyFilterRegistration' via factory method to bean named 'jerseyApplication' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaVersionFilterRegistration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaVersionFilterRegistration' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaVersionFilterRegistration' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointRegistrar' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointDiscoverer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointPathMapper' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletExposeExcludePropertyEndpointFilter' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletExposeExcludePropertyEndpointFilter' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'dispatcherServletRegistration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaRegistration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter' [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, eurekaVersionFilterRegistration urls=[/eureka/*] order=0, jerseyFilterRegistration urls=[/eureka/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105 [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/] [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.c.n.e.s.EurekaServerAutoConfiguration$1 - Filter 'eurekaVersionFilterRegistration' configured for use [sessionId=, requestId=]
2025-08-18 22:34:32 [main] DEBUG o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:34:33 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson [sessionId=, requestId=]
2025-08-18 22:34:33 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson [sessionId=, requestId=]
2025-08-18 22:34:34 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml [sessionId=, requestId=]
2025-08-18 22:34:34 [main] INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryServiceApplication' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerMarkerBean' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointObjectMapperWebMvcConfigurer' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointObjectMapper' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'endpointObjectMapperWebMvcConfigurer' via factory method to bean named 'endpointObjectMapper' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'themeResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'flashMapManager' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider [sessionId=, requestId=]
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:270)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:85)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.saviynt.discovery.DiscoveryServiceApplication.main(DiscoveryServiceApplication.java:12)
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse) [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.c.n.e.s.EurekaController:
	{GET [/]}: status(HttpServletRequest,Map)
	{GET [/lastn]}: lastn(HttpServletRequest,Map) [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 4 mappings in 'requestMappingHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPatternParser' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {} [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2XmlHttpMessageConverter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModule' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModuleEntries' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.a.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.saviynt.discovery'. Automatic @Repository and @Entity scanning is enabled. [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2XmlHttpMessageConverter' via factory method to bean named 'jacksonObjectMapperBuilder' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]} [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewNameTranslator' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@379ab47b' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerViewResolver' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beansEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:34 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beansEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggingRebinder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'refreshScope' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScopeLifecycle' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshScopeLifecycle' via factory method to bean named 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshEventListener' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshEventListener' via factory method to bean named 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cachesEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cachesEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'cachesEndpointWebExtension' via factory method to bean named 'cachesEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthStatusAggregator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthStatusAggregator' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthHttpCodeStatusMapper' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthHttpCodeStatusMapper' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroups' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroups' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'diskSpaceHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'diskSpaceHealthIndicator' via factory method to bean named 'management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pingHealthContributor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScopeHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesRebinder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesRebinder' via factory method to bean named 'configurationPropertiesBeans' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshScopeHealthIndicator' via factory method to bean named 'configurationPropertiesRebinder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryCompositeHealthContributor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inetUtils' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inetUtilsProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'inetUtils' via factory method to bean named 'inetUtilsProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serviceManagementMetadataProvider' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'inetUtils' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'serviceManagementMetadataProvider' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.c.n.e.m.DefaultManagementMetadataProvider - Constructed eureka meta-data healthcheckUrl: http://localhost:8767/actuator/health [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.c.n.e.m.DefaultManagementMetadataProvider - Constructed eureka meta-data statusPageUrl: http://localhost:8767/actuator/info [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryClientHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClientHealthIndicator' via factory method to bean named 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryCompositeHealthContributor' via factory method to bean named 'eurekaHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryCompositeHealthContributor' via factory method to bean named 'discoveryClientHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'diskSpaceHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'pingHealthContributor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'refreshScopeHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'discoveryCompositeHealthContributor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointGroupMembershipValidator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroupMembershipValidator' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointGroupMembershipValidator' via factory method to bean named 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'reactiveHealthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'diskSpaceHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'pingHealthContributor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'refreshScopeHealthIndicator' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'discoveryCompositeHealthContributor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointWebMvcHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointOperationParameterMapper' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointMediaTypes' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointOperationParameterMapper' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointMediaTypes' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointCachingOperationInvokerAdvisor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'endpointCachingOperationInvokerAdvisor' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webExposeExcludePropertyEndpointFilter' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebMvcHandlerMapping' via factory method to bean named 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebMvcHandlerMapping' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesReportEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesReportEndpoint' via factory method to bean named 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpoint' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpoint' via factory method to bean named 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sbomEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.sbom-org.springframework.boot.actuate.sbom.SbomProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration' via constructor to bean named 'management.endpoint.sbom-org.springframework.boot.actuate.sbom.SbomProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sbomEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthContributorRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthEndpointGroups' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'infoEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conditionsReportEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'conditionsReportEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesReportEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesReportEndpointWebExtension' via factory method to bean named 'configurationPropertiesReportEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesReportEndpointWebExtension' via factory method to bean named 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpointWebExtension' via factory method to bean named 'environmentEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpointWebExtension' via factory method to bean named 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggersEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loggersEndpoint' via factory method to bean named 'springBootLoggingSystem' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'heapDumpWebEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dumpEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsEndpoint' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sbomEndpointWebExtension' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sbomEndpointWebExtension' via factory method to bean named 'sbomEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'scheduledTasksEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingsEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingsEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletMappingDescriptionProvider' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletMappingDescriptionProvider' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'filterMappingDescriptionProvider' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshEndpoint' via factory method to bean named 'configDataContextRefresher' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'featuresEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaFeature' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springCloudCommonsFeatures' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerFeature' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serviceRegistryEndpoint' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration' via constructor to bean named 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServiceRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServiceRegistry' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'serviceRegistryEndpoint' via factory method to bean named 'eurekaServiceRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebChildContextFactory' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'managementServletContext' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'managementServletContext' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerExposeExcludePropertyEndpointFilter' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pathMappedEndpoints' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentManager' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentManager' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'meterRegistryCloser' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmGcMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmHeapPressureMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmMemoryMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmThreadMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classLoaderMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmInfoMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmCompilationMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'logbackMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'uptimeMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'processorMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileDescriptorMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'diskSpaceMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'diskSpaceMetrics' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'startupTimeMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'startupTimeMetrics' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eagerTaskExecutorMetrics' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatMetricsBinder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatMetricsBinder' via factory method to bean named 'simpleMeterRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gsonBuilder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gson' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientSsl' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientBuilderConfigurer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRestClientCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestClientCustomizer' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestClientCustomizer' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRestTemplateCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestTemplateCustomizer' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observationRestTemplateCustomizer' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'observabilitySchedulingConfigurer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'observabilitySchedulingConfigurer' via factory method to bean named 'observationRegistry' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerConfigurer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.w.s.v.f.FreeMarkerConfigurer - File system access not preferred: using SpringTemplateLoader [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.u.f.SpringTemplateLoader - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28, started on Mon Aug 18 22:34:28 IST 2025] and template loader path [classpath:/templates/] [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration' via constructor to bean named 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'compositeDiscoveryClient' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleDiscoveryClient' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleDiscoveryProperties' [sessionId=, requestId=]
2025-08-18 22:34:35 [main] DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.name' in PropertySource 'environmentProperties' with value of type String [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleDiscoveryClient' via factory method to bean named 'simpleDiscoveryProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'simpleDiscoveryClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'discoveryClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaAutoServiceRegistration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaServiceRegistry' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaRegistration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tlsProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultEurekaClientHttpRequestFactorySupplier' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultEurekaClientHttpRequestFactorySupplier' via factory method to bean named 'eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jersey3DiscoveryClientOptionalArgs' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'zoneConfig' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'zoneConfig' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerClientFactory' via factory method to bean named 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerEagerContextInitializer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerEagerContextInitializer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerEagerContextInitializer' via factory method to bean named 'spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerChildContextInitializer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerChildContextInitializer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerChildContextInitializer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'blockingLoadBalancerClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'blockingLoadBalancerClient' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerServiceInstanceCookieTransformer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerServiceInstanceCookieTransformer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'xForwarderHeadersTransformer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'xForwarderHeadersTransformer' via factory method to bean named 'loadBalancerClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerRequestFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerRequestFactory' via factory method to bean named 'blockingLoadBalancerClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'blockingLoadBalancerClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'loadBalancerRequestFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restTemplateCustomizer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restTemplateCustomizer' via factory method to bean named 'loadBalancerInterceptor' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancedRestTemplateInitializerDeprecated' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'compositeCompatibilityVerifier' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springBootVersionVerifier' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'springBootVersionVerifier' via factory method to bean named 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sleuthPresentVerifier' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'springBootVersionVerifier' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'sleuthPresentVerifier' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.c.SpringBootVersionVerifier - Version found in Boot manifest [3.3.0] [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.c.SpringBootVersionVerifier - Version found in Boot manifest [3.3.0] [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.c.CompositeCompatibilityVerifier - All conditions are passing [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultLoadBalancerCacheManager' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultLoadBalancerCacheManager' via factory method to bean named 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'caffeineWarnLogger' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaLoadBalancerProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerBootstrap' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jersey3EurekaServerHttpClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerAwareInstanceRegistry' via factory method to bean named 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerAwareInstanceRegistry' via factory method to bean named 'jersey3EurekaServerHttpClientFactory' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerAwareInstanceRegistry' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jersey3TransportClientFactories' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaApplicationInfoManager' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaClientConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'jersey3TransportClientFactories' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaApplicationInfoManager' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  c.netflix.discovery.DiscoveryClient - Client configured to neither register nor query for data. [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1755536676349 with initial instances count: 0 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerContext' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'peerEurekaNodes' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'replicationClientAdditionalFilters' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'replicationClientAdditionalFilters' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'serverCodecs' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'peerEurekaNodes' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  c.n.e.DefaultEurekaServerContext - Initializing ... [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 22:34:36 [main] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  c.n.e.r.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [] [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  c.n.e.DefaultEurekaServerContext - Initialized [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerBootstrap' via factory method to bean named 'peerAwareInstanceRegistry' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerBootstrap' via factory method to bean named 'eurekaServerContext' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaController' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka-org.springframework.cloud.netflix.eureka.server.EurekaProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaController' via factory method to bean named 'eureka-org.springframework.cloud.netflix.eureka.server.EurekaProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.dashboard-org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointServletHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'webEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'servletEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'endpointMediaTypes' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 17 endpoints beneath base path '/actuator' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerEndpointHandlerMapping' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration' via constructor to bean named 'environment' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase -2147483647 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'springBootLoggingLifecycle' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 0 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaClient' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaInstanceConfigBean' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaApplicationInfoManager' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application DISCOVERY-SERVICE with eureka with status UP [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.c.d.h.DiscoveryClientHealthIndicator - Discovery Client has been initialized [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'eurekaAutoServiceRegistration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147481599 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8767"] [sessionId=, requestId=]
2025-08-18 22:34:36 [Thread-9] INFO  o.s.c.n.e.s.EurekaServerBootstrap - isAws returned false [sessionId=, requestId=]
2025-08-18 22:34:36 [Thread-9] INFO  o.s.c.n.e.s.EurekaServerBootstrap - Initialized server context [sessionId=, requestId=]
2025-08-18 22:34:36 [Thread-9] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Got 1 instances from neighboring DS node [sessionId=, requestId=]
2025-08-18 22:34:36 [Thread-9] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Renew threshold is: 1 [sessionId=, requestId=]
2025-08-18 22:34:36 [Thread-9] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Changing status to UP [sessionId=, requestId=]
2025-08-18 22:34:36 [Thread-9] INFO  o.s.c.n.e.s.EurekaServerInitializerConfiguration - Started Eureka Server [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8767 (http) with context path '/' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8767 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147482623 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown' [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.a.l.ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   AutoServiceRegistrationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   AutoServiceRegistrationConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (OnPropertyCondition)
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on BlockingRestClassesPresentCondition.RestClientPresent @ConditionalOnClass found required class 'org.springframework.web.client.RestClient'; NestedCondition on BlockingRestClassesPresentCondition.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (BlockingRestClassesPresentCondition)

   BlockingLoadBalancerClientAutoConfiguration#blockingLoadBalancerClient matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration#loadBalancerServiceInstanceCookieTransformer matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration#xForwarderHeadersTransformer matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.features.enabled) matched (OnPropertyCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration#featuresEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.DiscoveryClient; SearchStrategy: all) found beans 'discoveryClient', 'simpleDiscoveryClient', 'compositeDiscoveryClient' (OnBeanCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryClientHealthIndicator matched:
      - @ConditionalOnProperty (spring.cloud.discovery.client.health-indicator.enabled) matched (OnPropertyCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryCompositeHealthContributor matched:
      - @ConditionalOnProperty (spring.cloud.discovery.client.composite-indicator.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator; SearchStrategy: all) found beans 'eurekaHealthIndicator', 'discoveryClientHealthIndicator' (OnBeanCondition)

   CompatibilityVerifierAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.compatibility-verifier.enabled) matched (OnPropertyCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   DiscoveryClientOptionalArgsConfiguration#defaultEurekaClientHttpRequestFactorySupplier matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched (OnPropertyCondition)

   EurekaClientAutoConfiguration#eurekaAutoServiceRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaClientConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClientConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaInstanceConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.EurekaInstanceConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#serviceManagementMetadataProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration#eurekaHealthIndicator matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.EurekaHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.refresh.enable=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaApplicationInfoManager matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.ApplicationInfoManager; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaClient matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClient; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaDiscoveryClientConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)

   EurekaDiscoveryClientConfiguration#discoveryClient matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaDiscoveryClientConfiguration.EurekaClientConfigurationRefresher matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent' (OnClassCondition)

   EurekaServerAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration$Marker; SearchStrategy: all) found bean 'eurekaServerMarkerBean' (OnBeanCondition)

   EurekaServerAutoConfiguration#eurekaController matched:
      - @ConditionalOnProperty (eureka.dashboard.enabled) matched (OnPropertyCondition)

   EurekaServerAutoConfiguration#eurekaServerContext matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.EurekaServerContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#jersey3DiscoveryClientOptionalArgs matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.AbstractDiscoveryClientOptionalArgs; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#jersey3EurekaServerHttpClientFactory matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.transport.EurekaServerHttpClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#jersey3TransportClientFactories matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.shared.transport.jersey.TransportClientFactories; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#peerEurekaNodes matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.cluster.PeerEurekaNodes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration#replicationClientAdditionalFilters matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.server.ReplicationClientAdditionalFilters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration.EurekaServerConfigBeanConfiguration#eurekaServerConfig matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.EurekaServerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) found bean 'jacksonObjectMapperBuilder' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration#mappingJackson2XmlHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LifecycleMvcEndpointAutoConfiguration#environmentManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.environment.EnvironmentManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration matched:
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on BlockingRestClassesPresentCondition.RestClientPresent @ConditionalOnClass found required class 'org.springframework.web.client.RestClient'; NestedCondition on BlockingRestClassesPresentCondition.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (BlockingRestClassesPresentCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'blockingLoadBalancerClient' (OnBeanCondition)

   org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (OnPropertyCondition)

   LoadBalancerAutoConfiguration#loadBalancerClientFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration#loadBalancerRequestFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration#zoneConfig matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.DeferringLoadBalancerInterceptorConfig#deferringLoadBalancerInterceptor matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.DeferringLoadBalancerInterceptorConfig#lbRestClientPostProcessor matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor; SearchStrategy: all) found bean 'deferringLoadBalancerInterceptor'; @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRestClientBuilderBeanPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition.RetryDisabled @ConditionalOnProperty (spring.cloud.loadbalancer.retry.enabled=false) did not find property 'spring.cloud.loadbalancer.retry.enabled'; NestedCondition on LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition.RetryTemplateMissing @ConditionalOnMissingClass did not find unwanted class 'org.springframework.retry.support.RetryTemplate' (LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig#restTemplateCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerCacheAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.cache.CacheManager', 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' (OnClassCondition)
      - AllNestedConditions 2 matched 0 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition.LoadBalancerCacheEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.cache.enabled) matched; NestedCondition on LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition.LoadBalancerEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition)

   LoadBalancerCacheAutoConfiguration.DefaultLoadBalancerCacheManagerConfiguration matched:
      - @ConditionalOnClass found required class 'com.stoyanr.evictor.ConcurrentMapWithTimedEviction' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineCacheManagerClassMissing @ConditionalOnMissingClass found unwanted class 'org.springframework.cache.caffeine.CaffeineCacheManager'; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineClassMissing @ConditionalOnMissingClass did not find unwanted class 'com.github.benmanes.caffeine.cache.Caffeine' (LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition)

   LoadBalancerCacheAutoConfiguration.DefaultLoadBalancerCacheManagerConfiguration#defaultLoadBalancerCacheManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerCacheAutoConfiguration.LoadBalancerCacheManagerWarnConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineCacheManagerClassMissing @ConditionalOnMissingClass found unwanted class 'org.springframework.cache.caffeine.CaffeineCacheManager'; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineClassMissing @ConditionalOnMissingClass did not find unwanted class 'com.github.benmanes.caffeine.cache.Caffeine' (LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition)

   LoadBalancerEurekaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched (OnPropertyCondition)

   LoadBalancerEurekaAutoConfiguration#eurekaLoadBalancerProperties matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ReactorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RefreshAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.refresh.enabled) matched (OnPropertyCondition)

   RefreshAutoConfiguration#configDataContextRefresher matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.refresh.ConfigDataContextRefresher; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - NoneNestedConditions 0 matched 3 did not; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnBootstrapEnabled @ConditionalOnProperty (spring.cloud.bootstrap.enabled) did not find property 'spring.cloud.bootstrap.enabled'; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnUseLegacyProcessingEnabled @ConditionalOnProperty (spring.config.use-legacy-processing) did not find property 'spring.config.use-legacy-processing'; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnBootstrapMarkerClassPresent @ConditionalOnClass did not find required class 'org.springframework.cloud.bootstrap.marker.Marker' (ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition)

   RefreshAutoConfiguration#loggingRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.logging.LoggingRebinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScope matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.scope.refresh.RefreshScope; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScopeLifecycle matched:
      - @ConditionalOnProperty (spring.cloud.refresh.on-restart.enabled) matched (OnPropertyCondition)

   RefreshEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration', 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   RefreshEndpointAutoConfiguration#refreshScopeHealthIndicator matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.health.RefreshScopeHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   RefreshEndpointAutoConfiguration.RefreshEndpointConfiguration#refreshEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.refresh.ContextRefresher; SearchStrategy: all) found bean 'configDataContextRefresher'; @ConditionalOnMissingBean (types: org.springframework.cloud.endpoint.RefreshEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ResourceServerTokenRelayAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.cloud.mvc.token-relay.enabled) matched (OnPropertyCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestartEndpointWithoutIntegrationConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.springframework.integration.monitor.IntegrationMBeanExporter' (OnClassCondition)

   SbomEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   SbomEndpointAutoConfiguration#sbomEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.sbom.SbomEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SbomEndpointAutoConfiguration#sbomEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.sbom.SbomEndpoint; SearchStrategy: all) found bean 'sbomEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.sbom.SbomEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksObservabilityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.ServiceRegistry; SearchStrategy: all) found bean 'eurekaServiceRegistry' (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration#serviceRegistryEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleDiscoveryClientAutoConfiguration#simpleDiscoveryProperties matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   UtilAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.util.enabled) matched (OnPropertyCondition)

   UtilAutoConfiguration#inetUtils matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.util.InetUtils; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BlockingLoadBalancerClientAutoConfiguration.BlockingLoadBalancerRetryConfig:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CloudHypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.Link' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans of type javax.sql.DataSource (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateDiscoveryClientOptionalArgs:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateTransportClientFactories:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.DiscoveryClientOptionalArgsTlsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: com.netflix.discovery.AbstractDiscoveryClientOptionalArgs; SearchStrategy: current) did not find any beans of type com.netflix.discovery.AbstractDiscoveryClientOptionalArgs (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.WebClientConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.WebClientNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaClientConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.OnPropertyDisabled @ConditionalOnProperty (eureka.client.refresh.enable=false) did not find property 'eureka.client.refresh.enable'; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingScope @ConditionalOnMissingBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found beans of type 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingClass @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition)

   EurekaClientConfigServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.server.config.ConfigServerProperties' (OnClassCondition)

   EurekaDiscoveryClientConfiguration.EurekaHealthCheckHandlerConfiguration:
      Did not match:
         - @ConditionalOnProperty (eureka.client.healthcheck.enabled) did not find property 'eureka.client.healthcheck.enabled' (OnPropertyCondition)

   EurekaReactiveDiscoveryClientConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   EurekaServerAutoConfiguration#traceFilterRegistration:
      Did not match:
         - @ConditionalOnBean (names: httpTraceFilter; SearchStrategy: all) did not find any beans named httpTraceFilter (OnBeanCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManagerFactory' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#processInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.process.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JdbcClientAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate' (OnBeanCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.DispatcherServlet' dispatcherServlet (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JmxEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   LoadBalancerCacheAutoConfiguration.CaffeineLoadBalancerCacheManagerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   LoadBalancerEurekaAutoConfiguration#zoneConfig:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig; SearchStrategy: all) found beans of type 'org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig' zoneConfig (OnBeanCondition)

   LoadBalancerStatsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.loadbalancer.stats.micrometer.enabled=true) did not find property 'spring.cloud.loadbalancer.stats.micrometer.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint:
      Did not match:
         - Log File did not find logging file (LogFileWebEndpointAutoConfiguration.LogFileCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MetricsAspectsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.ReactiveMongoTemplate' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopTracerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2LoadBalancerClientAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.oauth2.load-balanced.enabled) did not find property 'spring.cloud.oauth2.load-balanced.enabled' (OnPropertyCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.ObservedAspectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)

   org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   PauseResumeEndpointsConfiguration#pauseEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.context.restart.RestartEndpoint; SearchStrategy: all) did not find any beans of type org.springframework.cloud.context.restart.RestartEndpoint (OnBeanCondition)

   PauseResumeEndpointsConfiguration#resumeEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.context.restart.RestartEndpoint; SearchStrategy: all) did not find any beans of type org.springframework.cloud.context.restart.RestartEndpoint (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheusmetrics.PrometheusMeterRegistry' (OnClassCondition)

   PrometheusSimpleclientExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusSimpleclientMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveCommonsClientAutoConfiguration.ReactiveDiscoveryLoadBalancerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   ReactiveCompositeDiscoveryClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorLoadBalancerClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RefreshAutoConfiguration#legacyContextRefresher:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnBootstrapEnabled @ConditionalOnProperty (spring.cloud.bootstrap.enabled) did not find property 'spring.cloud.bootstrap.enabled'; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnUseLegacyProcessingEnabled @ConditionalOnProperty (spring.config.use-legacy-processing) did not find property 'spring.config.use-legacy-processing'; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnBootstrapMarkerClassPresent @ConditionalOnClass did not find required class 'org.springframework.cloud.bootstrap.marker.Marker' (ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition)

   RefreshAutoConfiguration.JpaInvokerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   RepositoryMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.repository.Repository' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   RestartEndpointWithIntegrationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.monitor.IntegrationMBeanExporter' (OnClassCondition)

   RestartEndpointWithoutIntegrationConfiguration#restartEndpointWithoutIntegration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.restart.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SimpleReactiveDiscoveryClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   WritableEnvironmentEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.endpoint.env.post.enabled) did not find property 'management.endpoint.env.post.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.env.EnvironmentEndpoint', 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Encoding' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.cloud.client.CommonsClientAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration

    org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration

    org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration

    org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration


 [sessionId=, requestId=]
2025-08-18 22:34:36 [main] INFO  c.s.d.DiscoveryServiceApplication - Started DiscoveryServiceApplication in 9.029 seconds (process running for 9.679) [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.a.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT [sessionId=, requestId=]
2025-08-18 22:34:36 [main] DEBUG o.s.b.a.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2d4a53c0 [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@48c99969 [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:34:36 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode  [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:auth-service:8082 (replication=null) [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - register AUTH-SERVICE, vip auth-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application AUTH-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP auth-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP auth-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:37 [http-nio-8767-exec-2] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance AUTH-SERVICE/192.168.0.38:auth-service:8082 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:auth-service:8082 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] WARN  c.n.e.r.AbstractInstanceRegistry - DS: Registry: lease doesn't exist, registering resource: ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] WARN  c.n.e.resources.InstanceResource - Not Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_ [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/error?status=UP&lastDirtyTimestamp=1755535961013", parameters={masked} [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest) [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, application/*+json] and supported [application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8] [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Mon Aug 18 22:34:41 IST 2025, status=404, error=Not Found, path=/eureka/apps/ANALYTICS-SE (truncated)...] [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404 [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:analytics-service:8093 (replication=null) [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - register ANALYTICS-SERVICE, vip analytics-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ANALYTICS-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP analytics-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP analytics-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:41 [http-nio-8767-exec-6] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance ANALYTICS-SERVICE/surya.Dlink:analytics-service:8093 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] WARN  c.n.e.r.AbstractInstanceRegistry - DS: Registry: lease doesn't exist, registering resource: CRM-SERVICE - surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] WARN  c.n.e.resources.InstanceResource - Not Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/error?status=UP&lastDirtyTimestamp=1755535975679", parameters={masked} [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest) [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, application/*+json] and supported [application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8] [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Mon Aug 18 22:34:56 IST 2025, status=404, error=Not Found, path=/eureka/apps/CRM-SERVICE/ (truncated)...] [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404 [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:34:56 [http-nio-8767-exec-8] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/surya.Dlink:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 3 [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:auth-service:8082 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:analytics-service:8093 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_3_ [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:35:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_3_ [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] WARN  c.n.e.r.AbstractInstanceRegistry - DS: Registry: lease doesn't exist, registering resource: API-GATEWAY - surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] WARN  c.n.e.resources.InstanceResource - Not Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/error?status=UP&lastDirtyTimestamp=1755535981245", parameters={masked} [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest) [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, application/*+json] and supported [application/json, application/*+json, application/xml;charset=UTF-8, text/xml;charset=UTF-8, application/*+xml;charset=UTF-8] [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Mon Aug 18 22:35:01 IST 2025, status=404, error=Not Found, path=/eureka/apps/API-GATEWAY/ (truncated)...] [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404 [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 9 [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.resources.ApplicationResource - Registering instance surya.Dlink:api-gateway:8080 (replication=null) [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - register API-GATEWAY, vip api-gateway, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V1 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V1 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application API-GATEWAY V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP api-gateway V2 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP api-gateway V2 XML, full [sessionId=, requestId=]
2025-08-18 22:35:01 [http-nio-8767-exec-2] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance API-GATEWAY/surya.Dlink:api-gateway:8080 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:35:07 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:07 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:07 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:35:07 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:35:11 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:11 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:11 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:35:11 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:35:26 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:26 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:26 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:35:26 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 4 [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:auth-service:8082 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:analytics-service:8093 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id surya.Dlink:api-gateway:8080 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:35:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:35:31 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:31 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:31 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:35:31 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:35:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:35:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:35:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:35:37 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:37 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:37 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:35:37 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:35:41 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:41 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:35:41 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:35:56 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:35:56 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:35:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:35:56 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:36:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:36:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:36:01 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:01 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:01 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:36:01 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:07 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:07 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:07 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:36:07 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:11 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:11 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:11 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:36:11 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:26 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:26 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:26 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:36:26 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:36:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:36:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:36:31 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:31 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:31 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:36:31 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:36:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:36:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:36:37 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:37 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:37 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:36:37 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:41 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:41 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:41 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:36:41 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:36:56 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:36:56 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:36:56 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:36:56 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:37:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:37:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:37:01 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:01 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:01 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:37:01 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:07 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:07 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:07 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:37:07 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:11 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:11 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:11 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:37:11 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:26 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:26 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:26 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:37:26 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:37:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:37:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:37:31 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:31 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:31 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:37:31 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:37:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:37:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:37:37 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:37 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:37 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:37:37 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:41 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:41 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:41 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:37:41 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:37:56 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:37:56 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:37:56 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:37:56 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:38:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:38:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:38:01 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:01 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:01 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:38:01 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:07 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:07 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:07 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:38:07 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:11 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:11 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:11 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:38:11 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:26 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:26 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:26 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:38:26 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:38:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:38:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 22:38:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:38:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:38:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:38:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:38:31 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:31 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:31 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:38:31 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 4ms [sessionId=, requestId=]
2025-08-18 22:38:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:38:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:38:37 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:37 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:37 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:38:37 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:41 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:41 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:41 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:38:41 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:38:56 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:38:56 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:38:56 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:38:56 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:39:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:39:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:39:01 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:01 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:01 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:39:01 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:07 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:07 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:07 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:39:07 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:12 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:12 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:12 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:39:12 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:26 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:26 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:26 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:39:26 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:39:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:39:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:39:32 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:32 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:32 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:39:32 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:39:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:39:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:39:37 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:37 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:37 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:39:37 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:42 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:42 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:42 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:39:42 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:39:56 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:39:56 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:39:56 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:39:56 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:40:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:40:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:40:02 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:02 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:02 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:40:02 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:07 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:07 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:07 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:40:07 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:12 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:12 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:12 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:40:12 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:26 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:26 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:26 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:40:26 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:40:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:40:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:40:32 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:32 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:32 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:40:32 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 15ms [sessionId=, requestId=]
2025-08-18 22:40:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:40:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:40:37 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:37 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:37 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:40:37 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:42 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:42 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:42 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:40:42 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:40:56 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:40:56 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:40:56 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:40:56 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:41:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:41:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:41:02 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:02 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:02 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:41:02 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:07 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:07 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:07 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:41:07 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:12 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:12 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:12 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:41:12 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:26 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:26 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:26 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:41:26 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:41:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:41:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 22:41:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:41:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:41:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:41:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:41:32 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:32 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:32 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:41:32 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 7ms [sessionId=, requestId=]
2025-08-18 22:41:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:41:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:41:37 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:37 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:37 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:41:37 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:42 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:42 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:42 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:41:42 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:41:56 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:41:56 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:41:56 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:41:56 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:42:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:42:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:42:02 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:02 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:42:02 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:07 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:07 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:07 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:42:07 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:12 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:12 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:12 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:42:12 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:26 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:26 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:26 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:42:26 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:42:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:42:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:42:32 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:32 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:32 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:42:32 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:42:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:42:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:42:37 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:37 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:37 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:42:37 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:42 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:42 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:42 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:42:42 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:42:56 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:42:56 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:42:56 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:42:56 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:43:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:43:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:43:02 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:02 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:02 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:43:02 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:07 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:07 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:07 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:43:07 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:12 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:12 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:12 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:43:12 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:26 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:26 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:26 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:43:26 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:43:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:43:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:43:32 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:32 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:32 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:43:32 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 6ms [sessionId=, requestId=]
2025-08-18 22:43:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:43:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:43:37 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:37 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:37 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:43:37 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:42 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:42 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:42 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:43:42 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:43:56 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:43:56 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:43:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:43:56 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:44:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:44:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:44:02 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:02 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:02 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:44:02 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:07 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:07 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:07 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:44:07 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:12 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:12 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:12 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:44:12 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:26 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:26 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:26 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:44:26 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:44:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:44:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 22:44:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:44:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:44:30 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:44:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_4_ [sessionId=, requestId=]
2025-08-18 22:44:32 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:32 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:44:32 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:36 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 22:44:36 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 22:44:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 9ms [sessionId=, requestId=]
2025-08-18 22:44:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:44:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:44:37 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:37 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:37 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:44:37 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:42 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:42 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:42 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:44:42 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:44:56 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId surya.Dlink:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:44:56 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:44:56 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:44:56 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - surya.Dlink:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:45:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:45:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:45:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:45:02 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:45:02 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:45:02 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:45:02 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:45:07 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:45:07 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:45:07 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:45:07 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:45:12 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:45:12 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:45:12 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:45:12 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:45:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:45:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:45:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:45:32 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:45:32 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:45:32 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:45:32 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:45:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:45:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:45:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:45:37 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:45:37 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:45:37 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:45:37 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:45:42 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:45:42 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:45:42 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:45:42 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:45:45 [http-nio-8767-exec-1] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:46:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:46:02 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:02 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:02 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:46:02 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:46:07 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:07 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:07 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:46:07 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:46:12 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:12 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:12 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:46:12 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:46:15 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:15 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:15 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:46:15 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:46:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:46:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:46:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:46:32 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:32 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:46:32 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:46:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:46:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:46:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:46:37 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:37 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:37 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:46:37 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:46:42 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:42 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:42 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:46:42 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:46:45 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:46:45 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:46:45 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:46:45 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:47:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:47:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:47:02 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:02 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:02 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:47:02 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:07 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:07 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:07 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:47:07 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:12 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:12 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:12 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:47:12 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:15 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:15 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:15 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:47:15 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:47:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:47:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:47:32 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:32 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:32 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:47:32 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 12ms [sessionId=, requestId=]
2025-08-18 22:47:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:47:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:47:37 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:37 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:37 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:47:37 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:42 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:42 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:42 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:47:42 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:47:45 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:47:45 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:47:45 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:47:45 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:48:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:48:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:48:02 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:02 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:02 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:48:02 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:07 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:07 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:07 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:48:07 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:12 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:12 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:12 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:48:12 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:15 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:15 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:15 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:48:15 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:48:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:48:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:48:32 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:32 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:32 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:48:32 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms [sessionId=, requestId=]
2025-08-18 22:48:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:48:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:48:37 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:37 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:37 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:48:37 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:42 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:42 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:42 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:48:42 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:48:45 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:48:45 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:48:45 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:48:45 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:49:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:49:02 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:02 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:02 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:49:02 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:07 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:07 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:07 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:49:07 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:12 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:12 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:12 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:49:12 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:15 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:15 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:15 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:49:15 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:49:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:49:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:49:32 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:32 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:49:32 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:36 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 10 [sessionId=, requestId=]
2025-08-18 22:49:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 12ms [sessionId=, requestId=]
2025-08-18 22:49:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:49:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:49:37 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:37 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:37 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:49:37 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:42 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:42 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:42 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:49:42 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:49:45 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:49:45 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:49:45 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:49:45 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:50:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:50:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:50:02 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:02 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:02 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:50:02 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:07 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:07 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:07 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:50:07 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:12 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:12 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:12 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:50:12 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:15 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:15 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:50:15 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:50:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:50:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:50:32 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:32 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:32 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:50:32 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 9ms [sessionId=, requestId=]
2025-08-18 22:50:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:50:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:50:37 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:37 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:37 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:50:37 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:42 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:42 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:42 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:50:42 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:50:45 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:50:45 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:50:45 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:50:45 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:51:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:51:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:51:02 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:02 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:02 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:51:02 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:08 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:08 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:08 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:51:08 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:12 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:12 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:12 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:51:12 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:15 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:15 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:15 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:51:15 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:51:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:51:30 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:51:32 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:32 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:32 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:51:32 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:36 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:51:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:51:36 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:51:38 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:38 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:38 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:51:38 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:42 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:42 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:42 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:51:42 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:51:45 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:51:45 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:51:45 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:51:45 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:52:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:52:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 22:52:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:52:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:52:00 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:52:00 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:52:02 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:02 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:02 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:52:02 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:08 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:08 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:08 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:52:08 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:12 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:12 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:12 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:52:12 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:15 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:15 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:15 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:52:15 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:52:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:52:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:52:42 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:42 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:42 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:52:42 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 9193ms [sessionId=, requestId=]
2025-08-18 22:52:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:52:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:52:47 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:47 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:47 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:52:47 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:52 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:52 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:52 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:52:52 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:52:55 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:52:55 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:52:55 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:52:55 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:53:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:53:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:53:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:53:12 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:53:12 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:53:12 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:53:12 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:53:17 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:53:17 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:53:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:53:17 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:53:22 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:53:22 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:53:22 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:53:22 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:53:25 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:53:25 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:53:25 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:53:25 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:53:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:53:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:53:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:53:42 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:53:42 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:53:42 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:53:42 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:53:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:53:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:53:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:53:47 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:53:47 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:53:47 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:53:47 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:53:52 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:53:52 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:53:52 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:53:52 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:54:12 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:54:12 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:12 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:54:12 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755537345476, provided=1755537857838 [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 22:54:17 [http-nio-8767-exec-8] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 22:54:22 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:54:22 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:22 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:54:22 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:54:42 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:54:42 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:42 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:54:42 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:54:45 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 22:54:45 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 22:54:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:54:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:54:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:54:47 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:54:52 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:54:52 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:54:52 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:54:52 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:55:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:55:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:55:12 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:12 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:12 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:55:12 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:55:17 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:22 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:22 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:22 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:55:22 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:55:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:55:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:55:42 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:42 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:42 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:55:42 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:55:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:55:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:55:47 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:55:52 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:55:52 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:55:52 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:55:52 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:56:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:56:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:56:12 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:12 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:12 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:56:12 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:56:17 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:22 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:22 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:22 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:56:22 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:56:42 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:42 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:42 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:56:42 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:56:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:56:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:56:47 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:56:52 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:56:52 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:56:52 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:56:52 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:57:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:57:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:57:12 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:12 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:12 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:57:12 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:17 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:17 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:17 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:57:17 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:18 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:18 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:18 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:57:18 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:22 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:22 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:22 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:57:22 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 22:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 22:57:42 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:42 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:42 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:57:42 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:57:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:57:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:57:47 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:47 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:47 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:57:47 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:48 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:48 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:48 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:57:48 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:57:52 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:57:52 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:57:52 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:57:52 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:58:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:58:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:58:12 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:12 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:12 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:58:12 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:17 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:17 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:17 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:58:17 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:18 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:18 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:18 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:58:18 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:22 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:22 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:22 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:58:22 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:58:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:58:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:58:42 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:42 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:42 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:58:42 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:58:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:58:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:58:47 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:47 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:47 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:58:47 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:48 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:48 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:48 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:58:48 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:58:52 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:58:52 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:58:52 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:58:52 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:59:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:59:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:59:12 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:12 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:12 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:59:12 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:17 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:17 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:17 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:59:17 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:18 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:18 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:18 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:59:18 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:22 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:22 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:22 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:59:22 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 22:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 22:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 22:59:42 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:42 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:42 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 22:59:42 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 22:59:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 22:59:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 22:59:47 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:47 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:47 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 22:59:47 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:48 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:48 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:48 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 22:59:48 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 22:59:52 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 22:59:52 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 22:59:52 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 22:59:52 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:00:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:00:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:00:12 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:12 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:12 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:00:12 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:17 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:17 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:17 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:00:17 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:18 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:18 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:18 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:00:18 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:22 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:22 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:22 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:00:22 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:00:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:00:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:00:42 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:42 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:42 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:00:42 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:00:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:00:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:00:47 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:47 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:47 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:00:47 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:48 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:48 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:48 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:00:48 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:00:52 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:00:52 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:00:52 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:00:52 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:01:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:01:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:01:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:01:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:01:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:01:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:01:12 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:12 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:12 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:01:12 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:17 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:17 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:17 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:01:17 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:18 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:18 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:18 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:01:18 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:22 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:22 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:22 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:01:22 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:01:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:01:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:01:42 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:42 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:42 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:01:42 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms [sessionId=, requestId=]
2025-08-18 23:01:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:01:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:01:47 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:47 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:47 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:01:47 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:48 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:48 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:48 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:01:48 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:01:52 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:01:52 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:01:52 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:01:52 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:02:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:02:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:02:12 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:12 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:12 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:02:12 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:17 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:17 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:17 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:02:17 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:18 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:18 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:18 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:02:18 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:22 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:22 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:22 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:02:22 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:02:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:02:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:02:42 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:42 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:42 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:02:42 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:02:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:02:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:02:48 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:02:52 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:02:52 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:02:52 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:02:52 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:03:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:03:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:03:12 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:12 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:12 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:03:12 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:03:18 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:23 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:23 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:23 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:03:23 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:03:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:03:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:03:42 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:42 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:42 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:03:42 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:03:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:03:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:03:48 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:03:53 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:03:53 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:03:53 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:03:53 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:04:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:04:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:04:13 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:13 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:13 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:04:13 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:04:18 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:23 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:23 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:23 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:04:23 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:04:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:04:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:04:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:04:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:04:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:04:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:04:43 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:43 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:43 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:04:43 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:45 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 23:04:45 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 23:04:45 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 10 [sessionId=, requestId=]
2025-08-18 23:04:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 9ms [sessionId=, requestId=]
2025-08-18 23:04:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:04:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:04:48 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:04:53 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:04:53 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:04:53 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:04:53 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:05:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:05:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:05:13 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:13 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:13 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:05:13 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:05:18 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:23 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:23 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:23 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:05:23 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:05:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:05:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:05:43 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:43 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:43 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:05:43 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 13ms [sessionId=, requestId=]
2025-08-18 23:05:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:05:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:05:48 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:05:53 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:05:53 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:05:53 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:05:53 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:06:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:06:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:06:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:06:13 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:06:13 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:06:13 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:06:13 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:06:18 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:06:18 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:06:18 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:06:18 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:06:23 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:06:23 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:06:23 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:06:23 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:06:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:06:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:06:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:06:43 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:06:43 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:06:43 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:06:43 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:06:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 4ms [sessionId=, requestId=]
2025-08-18 23:06:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:06:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:06:48 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:06:48 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:06:48 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:06:48 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:06:53 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:06:53 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:06:53 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:06:53 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755537857838, provided=1755538618121 [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:06:58 [http-nio-8767-exec-4] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:07:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:07:13 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:13 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:13 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:07:13 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:07:18 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:18 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:18 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:07:18 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:07:23 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:23 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:23 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:07:23 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:07:28 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:28 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:28 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:07:28 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:07:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:07:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:07:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:07:43 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:43 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:43 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:07:43 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:07:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 15ms [sessionId=, requestId=]
2025-08-18 23:07:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:07:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:07:48 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:48 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:48 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:07:48 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:07:53 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:53 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:53 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:07:53 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:07:58 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:07:58 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:07:58 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:07:58 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:08:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:08:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:08:13 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:13 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:13 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:08:13 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:18 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:18 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:18 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:08:18 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:23 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:23 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:23 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:08:23 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:28 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:28 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:28 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:08:28 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:08:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:08:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:08:43 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:43 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:43 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:08:43 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:08:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:08:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:08:48 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:48 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:48 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:08:48 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:53 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:53 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:53 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:08:53 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:08:58 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:08:58 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:08:58 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:08:58 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:09:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:09:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:09:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:09:13 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:09:13 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:09:13 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:09:13 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:09:18 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:09:18 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:09:18 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:09:18 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:09:23 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:09:23 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:09:23 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:09:23 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:09:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:09:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:09:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:09:43 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:09:43 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:09:43 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:09:43 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:09:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:09:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:09:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:09:48 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:09:48 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:09:48 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:09:48 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755538618121, provided=1755538792979 [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-9] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:09:53 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 2 [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:10:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:10:13 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:13 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:13 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:10:13 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:18 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:18 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:18 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:10:18 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:10:23 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:10:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:10:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:10:43 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:43 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:43 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:10:43 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 15ms [sessionId=, requestId=]
2025-08-18 23:10:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:10:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:10:48 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:48 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:48 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:10:48 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:10:53 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:11:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:11:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:11:13 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:13 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:13 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:11:13 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:18 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:18 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:18 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:11:18 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:11:23 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:11:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:11:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:11:43 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:43 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:43 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:11:43 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 14ms [sessionId=, requestId=]
2025-08-18 23:11:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:11:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:11:48 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:48 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:48 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:11:48 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:53 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:53 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:53 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:11:53 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:11:54 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:11:54 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:11:54 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:11:54 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:12:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:12:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:12:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:12:13 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:12:13 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:12:13 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:12:13 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:12:18 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:12:18 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:12:18 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:12:18 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:12:23 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:12:23 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:12:23 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:12:23 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:12:24 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:12:24 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:12:24 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:12:24 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:12:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:12:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:12:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:12:43 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:12:43 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:12:43 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:12:43 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:12:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 7ms [sessionId=, requestId=]
2025-08-18 23:12:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:12:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:12:48 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:12:48 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:12:48 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:12:48 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:12:54 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:12:54 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:12:54 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:12:54 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:13:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:13:13 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:13:13 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:13:13 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:13:13 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:13:18 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:13:18 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:13:18 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:13:18 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:13:24 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:13:24 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:13:24 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:13:24 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:13:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:13:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:13:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:13:43 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:13:43 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:13:43 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:13:43 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:13:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms [sessionId=, requestId=]
2025-08-18 23:13:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:13:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:13:48 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:13:48 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:13:48 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:13:48 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:13:54 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:13:54 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:13:54 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:13:54 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:14:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:14:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:14:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:14:13 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:14:13 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:14:13 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:14:13 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:14:18 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:14:18 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:14:18 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:14:18 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:14:24 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:14:24 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:14:24 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:14:24 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:14:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:14:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:14:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:14:43 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:14:43 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:14:43 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:14:43 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:14:45 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 23:14:45 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 23:14:45 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms [sessionId=, requestId=]
2025-08-18 23:14:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:14:45 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:14:49 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:14:49 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:14:49 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:14:49 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:14:54 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:14:54 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:14:54 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:14:54 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755538792979, provided=1755539105971 [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:15:06 [http-nio-8767-exec-1] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:15:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:15:13 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:15:13 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:13 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:15:13 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:15:19 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:15:19 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:19 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:15:19 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:15:24 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:15:24 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:24 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:15:24 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:15:36 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:15:36 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:36 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:15:36 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:15:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:15:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:15:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:15:43 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:15:43 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:43 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:15:43 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:15:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 15ms [sessionId=, requestId=]
2025-08-18 23:15:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:15:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:15:49 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:15:49 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:49 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:15:49 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:15:54 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:15:54 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:15:54 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:15:54 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:06 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:06 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:06 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:16:06 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:16:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:16:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:16:13 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:13 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:13 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:16:13 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:19 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:19 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:19 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:16:19 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:24 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:24 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:24 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:16:24 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:36 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:36 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:36 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:16:36 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:16:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:16:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:16:43 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:43 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:43 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:16:43 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 9ms [sessionId=, requestId=]
2025-08-18 23:16:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:16:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:16:49 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:49 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:49 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:16:49 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:16:54 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:16:54 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:16:54 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:16:54 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:06 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:06 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:06 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:17:06 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:17:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:17:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:17:14 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:14 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:14 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:17:14 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:19 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:19 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:19 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:17:19 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:24 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:24 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:24 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:17:24 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:36 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:36 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:36 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:17:36 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:17:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:17:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:17:44 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:44 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:44 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:17:44 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 8ms [sessionId=, requestId=]
2025-08-18 23:17:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:17:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:17:49 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:49 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:49 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:17:49 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:17:54 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:17:54 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:17:54 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:17:54 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:06 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:06 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:06 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:18:06 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:18:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:18:14 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:14 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:14 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:18:14 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:19 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:19 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:19 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:18:19 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:24 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:24 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:24 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:18:24 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:36 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:36 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:36 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:18:36 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:18:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:18:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:18:44 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:44 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:44 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:18:44 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:18:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:18:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:18:49 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:49 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:49 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:18:49 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:18:54 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:18:54 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:18:54 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:18:54 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:19:06 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:19:06 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:06 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:19:06 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:19:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:19:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:19:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:19:14 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:19:14 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:14 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:19:14 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:19:19 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:19:19 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:19 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:19:19 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:19:24 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:19:24 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:24 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:19:24 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:19:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:19:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:19:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755539105971, provided=1755539380530 [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:19:40 [http-nio-8767-exec-4] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:19:44 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:19:44 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:44 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:19:44 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:19:45 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 10 [sessionId=, requestId=]
2025-08-18 23:19:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms [sessionId=, requestId=]
2025-08-18 23:19:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:19:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:19:49 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:19:49 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:49 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:19:49 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:19:54 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:19:54 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:19:54 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:19:54 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:20:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:20:10 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:10 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:10 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:20:10 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:14 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:14 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:14 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:20:14 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:19 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:19 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:19 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:20:19 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:24 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:24 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:24 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:20:24 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:20:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:20:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:20:40 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:40 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:40 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:20:40 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:44 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:44 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:44 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:20:44 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:20:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:20:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:20:49 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:49 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:49 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:20:49 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:20:54 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:20:54 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:20:54 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:20:54 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:21:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:21:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:21:10 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:10 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:10 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:21:10 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:14 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:14 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:14 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:21:14 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:19 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:19 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:19 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:21:19 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:24 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:24 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:24 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:21:24 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:21:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:21:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:21:40 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:40 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:40 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:21:40 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:44 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:44 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:44 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:21:44 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:21:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:21:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:21:49 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:49 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:49 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:21:49 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:21:54 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:21:54 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:21:54 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:21:54 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:22:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:22:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:22:10 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:10 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:10 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:22:10 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:14 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:14 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:14 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:22:14 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:19 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:19 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:19 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:22:19 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:24 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:24 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:24 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:22:24 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:22:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:22:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:22:40 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:40 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:40 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:22:40 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:44 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:44 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:44 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:22:44 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:22:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:22:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:22:49 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:49 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:49 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:22:49 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:22:54 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:22:54 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:22:54 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:22:54 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:23:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:23:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:23:10 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:10 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:10 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:23:10 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:14 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:14 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:14 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:23:14 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:19 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:19 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:19 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:23:19 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:24 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:24 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:24 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:23:24 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:23:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:23:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:23:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:23:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:23:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:23:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:23:40 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:40 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:40 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:23:40 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:44 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:44 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:44 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:23:44 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms [sessionId=, requestId=]
2025-08-18 23:23:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:23:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:23:49 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:49 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:49 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:23:49 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:23:54 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:23:54 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:23:54 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:23:54 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:24:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:24:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:24:10 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:10 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:10 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:24:10 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:14 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:14 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:14 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:24:14 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:19 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:19 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:19 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:24:19 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:24 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:24 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:24 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:24:24 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:24:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:24:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:24:40 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:40 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:40 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:24:40 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:44 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:44 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:44 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:24:44 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:45 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 23:24:45 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 23:24:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms [sessionId=, requestId=]
2025-08-18 23:24:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:24:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:24:49 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:49 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:49 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:24:49 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:24:54 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:24:54 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:24:54 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:24:54 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:25:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:25:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:25:10 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:10 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:25:10 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:14 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:14 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:14 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:25:14 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:19 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:19 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:19 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:25:19 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:24 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:24 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:24 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:25:24 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:25:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:25:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:25:40 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:40 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:25:40 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:44 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:44 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:44 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:25:44 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:25:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:25:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:25:49 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:49 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:49 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:25:49 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:25:54 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:25:54 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:25:54 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:25:54 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:26:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:26:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:26:10 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:10 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:10 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:26:10 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:14 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:14 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:14 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:26:14 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:19 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:19 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:19 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:26:19 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:24 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:24 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:24 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:26:24 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:26:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:26:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:26:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:26:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:26:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:26:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:26:41 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:41 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:41 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:26:41 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:44 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:44 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:44 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:26:44 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms [sessionId=, requestId=]
2025-08-18 23:26:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:26:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:26:49 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:49 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:49 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:26:49 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:26:54 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:26:54 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:26:54 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:26:54 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:27:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:27:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:27:11 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:11 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:11 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:27:11 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:14 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:14 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:14 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:27:14 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:19 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:19 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:19 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:27:19 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:24 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:24 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:24 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:27:24 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:27:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:27:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:27:41 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:41 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:41 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:27:41 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:44 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:44 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:44 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:27:44 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 7ms [sessionId=, requestId=]
2025-08-18 23:27:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:27:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:27:49 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:49 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:49 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:27:49 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:27:54 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:27:54 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:27:54 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:27:54 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:28:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:28:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:28:11 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:11 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:11 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:28:11 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:14 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:14 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:14 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:28:14 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:19 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:19 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:19 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:28:19 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:25 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:25 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:25 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:28:25 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:28:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:28:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:28:41 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:41 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:41 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:28:41 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:44 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:44 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:44 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:28:44 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms [sessionId=, requestId=]
2025-08-18 23:28:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:28:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:28:49 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:49 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:49 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:28:49 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:28:55 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:28:55 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:28:55 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:28:55 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:29:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:29:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:29:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:29:11 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:29:11 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:29:11 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:29:11 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:29:15 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:29:15 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:29:15 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:29:15 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:29:19 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:29:19 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:29:19 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:29:19 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:29:25 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:29:25 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:29:25 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:29:25 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:29:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:29:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:29:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:29:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:29:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:29:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:29:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:29:45 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:29:45 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:29:45 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:29:45 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:29:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:29:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:29:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:29:49 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:29:49 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:29:49 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:29:49 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:29:55 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:29:55 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:29:55 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:29:55 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755539380530, provided=1755540001965 [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:30:02 [http-nio-8767-exec-8] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:30:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:30:15 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:30:15 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:15 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:30:15 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:30:19 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:30:19 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:19 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:30:19 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:30:25 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:30:25 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:25 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:30:25 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:30:32 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:30:32 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:32 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:30:32 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:30:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:30:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:30:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:30:45 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:30:45 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:30:45 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:30:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:30:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:30:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:30:49 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:30:49 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:49 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:30:49 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:30:55 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:30:55 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:30:55 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:30:55 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:02 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:02 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:02 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:31:02 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:31:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:31:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:31:15 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:15 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:15 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:31:15 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:20 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:20 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:20 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:31:20 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:25 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:25 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:25 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:31:25 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:32 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:32 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:32 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:31:32 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:31:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:31:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:31:45 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:45 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:45 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:31:45 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:31:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:31:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:31:50 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:50 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:50 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:31:50 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:31:55 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:31:55 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:31:55 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:31:55 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:02 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:02 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:02 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:32:02 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:32:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:32:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:32:15 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:15 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:15 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:32:15 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:20 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:20 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:20 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:32:20 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:25 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:25 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:25 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:32:25 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:32 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:32 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:32:32 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:32:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:32:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:32:45 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:45 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:45 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:32:45 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:32:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:32:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:32:50 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:50 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:50 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:32:50 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:32:55 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:32:55 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:32:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:32:55 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:02 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:02 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:02 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:33:02 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:33:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:33:15 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:15 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:33:15 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:20 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:20 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:20 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:33:20 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:25 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:25 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:25 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:33:25 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:32 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:32 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:32 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:33:32 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:33:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:33:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:33:45 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:45 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:45 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:33:45 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:33:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:33:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:33:50 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:50 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:50 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:33:50 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:33:55 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:33:55 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:33:55 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:33:55 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:02 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:02 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:02 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:34:02 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:34:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:34:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:34:15 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:15 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:15 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:34:15 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:20 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:20 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:20 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:34:20 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:25 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:25 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:25 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:34:25 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:32 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:32 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:32 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:34:32 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:34:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:34:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:34:45 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:45 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:45 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:34:45 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:45 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 10 [sessionId=, requestId=]
2025-08-18 23:34:45 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 23:34:45 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 23:34:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:34:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:34:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:34:50 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:50 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:50 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:34:50 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:34:55 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:34:55 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:34:55 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:34:55 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:02 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:02 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:02 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:35:02 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:35:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:35:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:35:15 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:15 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:15 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:35:15 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:20 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:20 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:20 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:35:20 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:25 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:25 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:25 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:35:25 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:32 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:32 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:32 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:35:32 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:35:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:35:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:35:45 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:45 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:45 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:35:45 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:35:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:35:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:35:50 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:50 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:50 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:35:50 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:35:55 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:35:55 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:35:55 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:35:55 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:02 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:02 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:02 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:36:02 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:36:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:36:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:36:15 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:15 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:15 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:36:15 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:20 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:20 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:20 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:36:20 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:25 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:25 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:25 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:36:25 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:32 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:32 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:32 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:36:32 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:36:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:36:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:36:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:36:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:36:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:36:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:36:45 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:45 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:45 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:36:45 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:36:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:36:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:36:50 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:50 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:50 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:36:50 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:36:55 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:36:55 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:36:55 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:36:55 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:02 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:02 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:02 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:37:02 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:37:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:37:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:37:15 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:15 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:15 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:37:15 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:20 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:20 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:20 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:37:20 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:25 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:25 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:25 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:37:25 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:32 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:32 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:32 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:37:32 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:37:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:37:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:37:45 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:45 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:45 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:37:45 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:37:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:37:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:37:50 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:50 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:50 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:37:50 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:37:55 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:37:55 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:37:55 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:37:55 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:02 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:02 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:02 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:38:02 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:38:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:38:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:38:15 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:15 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:15 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:38:15 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:20 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:20 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:20 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:38:20 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:25 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:25 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:25 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:38:25 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:32 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:32 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:32 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:38:32 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:38:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:38:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:38:45 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:45 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:45 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:38:45 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:38:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:38:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:38:50 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:50 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:50 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:38:50 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:38:55 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:38:55 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:38:55 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:38:55 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:02 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:02 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:02 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:39:02 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:39:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:39:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:39:15 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:15 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:15 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:39:15 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:20 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:20 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:20 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:39:20 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:25 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:25 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:25 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:39:25 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:32 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:32 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:32 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:39:32 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:39:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:39:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:39:45 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:45 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:45 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:39:45 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:39:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:39:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:39:50 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:50 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:50 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:39:50 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:39:55 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:39:55 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:39:55 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:39:55 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:02 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:02 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:02 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:40:02 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:40:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:40:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:40:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:40:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:40:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:40:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:40:15 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:15 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:15 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:40:15 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:20 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:20 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:20 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:40:20 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:25 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:25 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:25 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:40:25 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:32 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:32 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:32 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:40:32 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:40:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:40:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:40:45 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:45 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:45 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:40:45 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms [sessionId=, requestId=]
2025-08-18 23:40:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:40:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:40:50 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:50 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:50 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:40:50 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:40:56 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:40:56 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:40:56 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:40:56 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:02 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:02 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:02 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:41:02 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:41:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:41:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:41:15 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:15 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:15 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:41:15 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:20 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:20 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:20 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:41:20 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:26 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:26 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:26 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:41:26 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:32 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:32 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:32 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:41:32 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:41:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:41:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:41:45 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:45 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:45 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:41:45 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:41:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:41:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:41:50 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:50 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:50 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:41:50 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:41:56 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:41:56 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:41:56 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:41:56 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:02 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:02 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:02 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:42:02 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:42:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:42:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:42:15 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:15 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:15 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:42:15 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:20 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:20 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:20 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:42:20 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:26 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:26 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:26 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:42:26 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:32 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:32 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:32 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:42:32 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:42:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:42:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:42:46 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:46 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:46 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:42:46 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:42:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:42:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:42:50 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:50 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:50 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:42:50 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:42:56 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:42:56 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:42:56 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:42:56 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:02 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:02 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:02 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:43:02 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:43:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:43:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:43:16 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:16 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:16 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:43:16 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:20 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:20 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:20 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:43:20 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:26 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:26 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:26 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:43:26 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:32 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:32 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:32 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:43:32 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:43:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:43:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:43:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:43:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:43:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:43:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:43:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms [sessionId=, requestId=]
2025-08-18 23:43:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:43:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:43:46 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:46 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:46 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:43:46 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:50 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:50 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:50 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:43:50 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:43:56 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:43:56 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:43:56 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:43:56 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:44:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:44:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:44:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755540001965, provided=1755540855110 [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:44:15 [http-nio-8767-exec-3] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:44:16 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:44:16 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:16 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:44:16 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:44:20 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:44:20 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:20 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:44:20 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:44:26 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:44:26 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:26 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:44:26 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:44:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:44:45 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:44:45 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:45 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:44:45 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:44:45 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 23:44:45 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 23:44:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:44:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:44:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:44:46 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:44:46 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:46 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:44:46 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:44:50 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:44:50 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:50 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:44:50 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:44:56 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:44:56 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:44:56 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:44:56 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:45:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:45:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:45:15 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:15 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:15 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:45:15 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:16 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:16 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:16 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:45:16 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:20 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:20 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:20 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:45:20 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:26 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:26 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:26 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:45:26 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:45:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:45:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:45:45 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:45 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:45 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:45:45 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:45:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:45:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:45:46 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:46 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:46 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:45:46 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:50 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:50 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:50 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:45:50 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:45:56 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:45:56 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:45:56 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:45:56 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:46:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:46:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:46:15 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:15 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:15 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:46:15 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:16 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:16 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:16 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:46:16 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:21 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:21 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:21 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:46:21 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:26 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:26 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:26 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:46:26 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:46:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:46:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:46:45 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:45 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:45 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:46:45 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:46:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:46:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:46:46 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:46 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:46 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:46:46 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:51 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:51 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:51 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:46:51 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:46:56 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:46:56 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:46:56 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:46:56 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:47:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:47:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:47:15 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:15 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:15 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:47:15 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:16 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:16 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:16 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:47:16 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:21 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:21 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:21 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:47:21 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:26 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:26 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:26 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:47:26 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:47:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:47:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0 [sessionId=, requestId=]
2025-08-18 23:47:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:47:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:47:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:47:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:47:45 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:45 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:45 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:47:45 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 12ms [sessionId=, requestId=]
2025-08-18 23:47:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:47:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:47:46 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:46 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:46 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:47:46 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:51 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:51 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:51 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:47:51 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:47:56 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:47:56 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:47:56 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:47:56 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:48:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:48:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:48:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:48:16 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:48:16 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:16 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:48:16 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755540855110, provided=1755541101721 [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:48:21 [http-nio-8767-exec-10] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:48:26 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:48:26 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:26 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:48:26 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:48:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:48:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 6ms [sessionId=, requestId=]
2025-08-18 23:48:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:48:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:48:46 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:48:46 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:46 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:48:46 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:48:51 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:48:56 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:48:56 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:48:56 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:48:56 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:49:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:49:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:49:16 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:16 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:16 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:49:16 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:49:21 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:26 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:26 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:26 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:49:26 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:49:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:49:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:49:45 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] INFO  c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 10 [sessionId=, requestId=]
2025-08-18 23:49:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 15ms [sessionId=, requestId=]
2025-08-18 23:49:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:49:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:49:46 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:46 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:46 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:49:46 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:49:51 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:49:56 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:49:56 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:49:56 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:49:56 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:50:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:50:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:50:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:50:16 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:50:16 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:50:16 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:50:16 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:50:21 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:50:26 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:50:26 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:50:26 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:50:26 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:50:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:50:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:50:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:50:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 7ms [sessionId=, requestId=]
2025-08-18 23:50:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:50:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:50:46 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:50:46 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:50:46 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:50:46 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:50:51 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:50:51 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:50:51 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:50:51 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:50:56 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:50:56 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:50:56 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:50:56 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:51:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:51:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:51:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755541101721, provided=1755541270789 [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:51:10 [http-nio-8767-exec-6] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:51:16 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:51:16 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:16 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:51:16 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:51:21 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:51:21 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:21 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:51:21 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:51:26 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:51:26 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:26 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:51:26 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 2 [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:51:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:51:40 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:51:40 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:40 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:51:40 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:51:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 10ms [sessionId=, requestId=]
2025-08-18 23:51:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:51:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:51:46 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:51:46 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:46 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:51:46 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:51:51 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:51:51 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:51 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:51:51 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:51:56 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:51:56 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:51:56 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:51:56 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:52:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:52:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:52:10 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:10 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:10 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:52:10 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:16 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:16 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:16 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:52:16 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:21 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:21 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:21 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:52:21 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:26 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:26 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:26 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:52:26 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:52:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:52:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:52:40 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:40 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:40 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:52:40 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:52:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:52:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:52:46 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:46 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:46 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:52:46 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:51 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:51 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:51 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:52:51 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:52:56 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:52:56 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:52:56 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:52:56 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:53:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:53:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:53:10 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:10 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:10 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:53:10 [http-nio-8767-exec-8] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:16 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:16 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:16 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:53:16 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:21 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:21 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:21 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:53:21 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:26 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:26 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:26 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:53:26 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:53:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:53:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:53:40 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:40 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:40 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:53:40 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:53:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:53:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:53:46 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:46 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:46 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:53:46 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:51 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:51 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:51 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:53:51 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:53:56 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:53:56 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:53:56 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:53:56 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755541270789, provided=1755541444311 [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:54:04 [http-nio-8767-exec-5] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 2 [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:54:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:54:16 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:54:16 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:16 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:54:16 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:54:21 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:54:21 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:54:21 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:54:26 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:54:26 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:26 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:54:26 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:54:34 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:54:34 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:34 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:54:34 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:54:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:54:45 [Eureka-PeerNodesUpdater] DEBUG c.n.discovery.endpoint.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone] [sessionId=, requestId=]
2025-08-18 23:54:45 [Eureka-PeerNodesUpdater] WARN  c.n.eureka.cluster.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry [sessionId=, requestId=]
2025-08-18 23:54:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:54:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:54:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:54:46 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:54:46 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:46 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:54:46 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:54:51 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:54:51 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:51 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:54:51 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:54:56 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:54:56 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:54:56 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:54:56 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:04 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:04 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:04 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:55:04 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:55:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:55:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:55:16 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:16 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:16 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:55:16 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:21 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:21 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:21 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:55:21 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:27 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:27 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:27 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:55:27 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:34 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:34 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:34 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:55:34 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:55:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:55:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:55:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:55:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:55:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:55:46 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:46 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:46 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:55:46 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:51 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:51 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:51 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:55:51 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:55:57 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:55:57 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:55:57 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:55:57 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:56:04 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:56:04 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:04 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:56:04 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:56:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:56:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:56:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:56:16 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:56:16 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:16 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:56:16 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:56:21 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:56:21 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:21 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:56:21 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:56:27 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:56:27 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:27 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:56:27 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing global-level cache with size 2 [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.d.util.DeserializerStringCache - clearing app-level serialization cache with size 8 [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.resources.ApplicationResource - Registering instance 192.168.0.38:crm-service:8083 (replication=null) [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG o.s.c.n.e.server.InstanceRegistry - register CRM-SERVICE, vip crm-service, leaseDuration 90, isReplication false [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1755541444311, provided=1755541592866 [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 JSON, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V1 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application CRM-SERVICE V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : VIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] DEBUG c.n.e.registry.ResponseCacheImpl - Invalidating the response cache key : SVIP crm-service V2 XML, full [sessionId=, requestId=]
2025-08-18 23:56:32 [http-nio-8767-exec-8] INFO  c.n.e.r.AbstractInstanceRegistry - Registered instance CRM-SERVICE/192.168.0.38:crm-service:8083 with status UP (replication=false) [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 2 [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:56:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:56:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms [sessionId=, requestId=]
2025-08-18 23:56:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:56:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:56:46 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:56:46 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:46 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:56:46 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:56:51 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:56:51 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:51 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:56:51 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:56:57 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:56:57 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:56:57 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:56:57 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:02 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:02 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:02 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:57:02 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:57:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:57:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:57:16 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:16 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:16 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:57:16 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:21 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:21 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:21 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:57:21 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:27 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:27 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:27 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:57:27 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:32 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:32 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:32 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:57:32 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:57:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:57:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 10ms [sessionId=, requestId=]
2025-08-18 23:57:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:57:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:57:47 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:47 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:47 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:57:47 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:51 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:51 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:51 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:57:51 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:57:57 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:57:57 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:57:57 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:57:57 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:02 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:02 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:02 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:58:02 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:58:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:58:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:58:17 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:17 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:17 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:58:17 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:21 [http-nio-8767-exec-6] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:21 [http-nio-8767-exec-6] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:21 [http-nio-8767-exec-6] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:58:21 [http-nio-8767-exec-6] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:27 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:27 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:27 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:58:27 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:32 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:32 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:32 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:58:32 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:58:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:58:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:58:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms [sessionId=, requestId=]
2025-08-18 23:58:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:58:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:58:47 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:47 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:47 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:58:47 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:51 [http-nio-8767-exec-7] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:51 [http-nio-8767-exec-7] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:51 [http-nio-8767-exec-7] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:58:51 [http-nio-8767-exec-7] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:58:57 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:58:57 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:58:57 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:58:57 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:03 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:03 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:03 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:59:03 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:59:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:59:09 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:59:17 [http-nio-8767-exec-3] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:17 [http-nio-8767-exec-3] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:17 [http-nio-8767-exec-3] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:59:17 [http-nio-8767-exec-3] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:21 [http-nio-8767-exec-9] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:21 [http-nio-8767-exec-9] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:21 [http-nio-8767-exec-9] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:59:21 [http-nio-8767-exec-9] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:27 [http-nio-8767-exec-4] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:27 [http-nio-8767-exec-4] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:27 [http-nio-8767-exec-4] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:59:27 [http-nio-8767-exec-4] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:33 [http-nio-8767-exec-5] DEBUG o.s.c.n.e.server.InstanceRegistry - renew CRM-SERVICE serverId 192.168.0.38:crm-service:8083, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:33 [http-nio-8767-exec-5] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:33 [http-nio-8767-exec-5] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:crm-service:8083 [sessionId=, requestId=]
2025-08-18 23:59:33 [http-nio-8767-exec-5] DEBUG c.n.e.resources.InstanceResource - Found (Renew): CRM-SERVICE - 192.168.0.38:crm-service:8083; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1 [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.0.38:crm-service:8083 is found with status UP and actiontype ADDED [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument [] [sessionId=, requestId=]
2025-08-18 23:59:39 [Eureka-CacheFillTimer] DEBUG c.n.e.registry.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_5_ [sessionId=, requestId=]
2025-08-18 23:59:46 [Eureka-EvictionTimer] INFO  c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 7ms [sessionId=, requestId=]
2025-08-18 23:59:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - Running the evict task [sessionId=, requestId=]
2025-08-18 23:59:46 [Eureka-EvictionTimer] DEBUG c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled. [sessionId=, requestId=]
2025-08-18 23:59:47 [http-nio-8767-exec-1] DEBUG o.s.c.n.e.server.InstanceRegistry - renew API-GATEWAY serverId surya.Dlink:api-gateway:8080, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:47 [http-nio-8767-exec-1] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:47 [http-nio-8767-exec-1] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:api-gateway:8080 [sessionId=, requestId=]
2025-08-18 23:59:47 [http-nio-8767-exec-1] DEBUG c.n.e.resources.InstanceResource - Found (Renew): API-GATEWAY - surya.Dlink:api-gateway:8080; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:51 [http-nio-8767-exec-10] DEBUG o.s.c.n.e.server.InstanceRegistry - renew AUTH-SERVICE serverId 192.168.0.38:auth-service:8082, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:51 [http-nio-8767-exec-10] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:51 [http-nio-8767-exec-10] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.0.38:auth-service:8082 [sessionId=, requestId=]
2025-08-18 23:59:51 [http-nio-8767-exec-10] DEBUG c.n.e.resources.InstanceResource - Found (Renew): AUTH-SERVICE - 192.168.0.38:auth-service:8082; reply status=200 [sessionId=, requestId=]
2025-08-18 23:59:57 [http-nio-8767-exec-2] DEBUG o.s.c.n.e.server.InstanceRegistry - renew ANALYTICS-SERVICE serverId surya.Dlink:analytics-service:8093, isReplication {}false [sessionId=, requestId=]
2025-08-18 23:59:57 [http-nio-8767-exec-2] DEBUG c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule] [sessionId=, requestId=]
2025-08-18 23:59:57 [http-nio-8767-exec-2] DEBUG c.n.e.registry.rule.LeaseExistsRule - There is already an existing lease with status UP  for instance surya.Dlink:analytics-service:8093 [sessionId=, requestId=]
2025-08-18 23:59:57 [http-nio-8767-exec-2] DEBUG c.n.e.resources.InstanceResource - Found (Renew): ANALYTICS-SERVICE - surya.Dlink:analytics-service:8093; reply status=200 [sessionId=, requestId=]
